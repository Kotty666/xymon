Fixes tons of spelling errors found by lintian initally and then later by grep.

Index: xymon/docs/install.html
===================================================================
--- xymon.orig/docs/install.html	2012-07-23 23:40:15.000000000 +0200
+++ xymon/docs/install.html	2012-07-23 23:41:15.000000000 +0200
@@ -20,7 +20,7 @@
 
 <h2>Prerequisites - before you install Xymon</h2>
 <p>There are a few things you should check before you begin to install Xymon.
-Dont be scared of the number of items here - it is likely that you already have
+Don't be scared of the number of items here - it is likely that you already have
 most or all of it in place.</p>
 
 <h4>A webbrowser capable of handling HTML 4, JavaScript and CSS</h4>
@@ -34,10 +34,10 @@
 IPC mechanisms (shared memory, semaphores) - that should be just about anything
 Unix-like you are likely to have.</p>
 
-<h4>Sufficient SYSV IPC ressources on your system</h4>
+<h4>Sufficient SYSV IPC resources on your system</h4>
 <p>Xymon uses 8 shared memory segments, ranging in size from 32 KB to 512 KB (2336 KB
 total) in the default configuration; and 8 sets of 3 semaphores. Experience shows that 
-some systems need tuning to provide the necessary IPC ressources that Xymon uses. 
+some systems need tuning to provide the necessary IPC resources that Xymon uses. 
 Specifically, when installing on Solaris you must increase the "shmseg" kernel parameter 
 from the default 6 to at least 8. Since other programs on your system may also use shared 
 memory, a higher value may be required.  See <a href="http://www.xymon.com/archive/2005/08/msg00183.html">http://www.xymon.com/archive/2005/08/msg00183.html</a> for more information about these issues.</p>
Index: xymon/docs/known-issues.html
===================================================================
--- xymon.orig/docs/known-issues.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/known-issues.html	2012-07-23 23:41:15.000000000 +0200
@@ -84,7 +84,7 @@
 </p>
 
 <h3><a name="freebsdkernelsem">Xymon fails on FreeBSD with &quot;Could not get sem: No space left on device&quot;</a></h3>
-<p>Xymon uses some kernel ressources - semaphores and shared memory. 
+<p>Xymon uses some kernel resources - semaphores and shared memory. 
 If you get the following error message in xymonlaunch.log when trying
 to start Xymon:</p>
 <pre><tt>
Index: xymon/docs/manpages/man8/xymonproxy.8.html
===================================================================
--- xymon.orig/docs/manpages/man8/xymonproxy.8.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man8/xymonproxy.8.html	2012-07-23 23:41:15.000000000 +0200
@@ -68,7 +68,7 @@
 <P>
 <DT>--listen=LOCALIP[:PORT]<DD>
 Specifies the IP-adress where xymonproxy listens for incoming 
-connections. By default, xymonproxy listens on all IP-adresses
+connections. By default, xymonproxy listens on all IP-addresses
 assigned to the host. If no portnumber is given, port 1984
 will be used.
 <P>
@@ -89,18 +89,18 @@
 <DT>--lqueue=N<DD>
 Size of the listen-queue where incoming connections can
 queue up before being processed. This should be large to
-accomodate bursts of activity from clients. Default: 512.
+accommodate bursts of activity from clients. Default: 512.
 <P>
 <DT>--daemon<DD>
-Run in daemon mode, i.e. detach and run as a background proces.
+Run in daemon mode, i.e. detach and run as a background process.
 This is the default.
 <P>
 <DT>--no-daemon<DD>
-Runs xymonproxy as a foreground proces.
+Runs xymonproxy as a foreground process.
 <P>
 <DT>--pidfile=FILENAME<DD>
-Specifies the location of a file containing the proces-ID 
-of the xymonproxy daemon proces. Default: /var/run/xymonproxy.pid.
+Specifies the location of a file containing the process-ID 
+of the xymonproxy daemon process. Default: /var/run/xymonproxy.pid.
 <P>
 <DT>--logfile=FILENAME<DD>
 Sends all logging output to the specified file instead of stderr.
@@ -108,7 +108,7 @@
 <DT>--log-details<DD>
 Log details (IP-address, message type and hostname) to the logfile.
 This can also be enabled and disabled at run-time by sending the
-xymonproxy proces a SIGUSR1 signal.
+xymonproxy process a SIGUSR1 signal.
 <P>
 <DT>--debug<DD>
 Enable debugging output.
@@ -150,13 +150,13 @@
 The number of other messages (data, notes, ack, query, ...)
 messages received from a client.
 <P>
-<DT>Proxy ressources - Connection table size<DD>
+<DT>Proxy resources - Connection table size<DD>
 This is the number of connection table slots in the proxy.
 This measures the number of simultaneously active requests
 that the proxy has handled, and so gives an idea about the
 peak number of clients that the proxy has handled simultaneously.
 <P>
-<DT>Proxy ressources - Buffer space<DD>
+<DT>Proxy resources - Buffer space<DD>
 This is the number of KB memory allocated for network buffers.
 <P>
 <DT>Timeout details - reading from client<DD>
Index: xymon/docs/xymon-mrtg.html
===================================================================
--- xymon.orig/docs/xymon-mrtg.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/xymon-mrtg.html	2012-07-23 23:41:15.000000000 +0200
@@ -19,7 +19,7 @@
 <h3>Simple Xymon-MRTG support</h3>
 <p>MRTG by default uses its own fileformat for the data files, and 
 continuously generates PNG- or GIF-images of the data. This is a 
-waste of ressources - most of the time, these images are never seen.
+waste of resources - most of the time, these images are never seen.
 This was in fact one of the reasons that RRDtool was developed, to
 separate the data-collection from the graph generation.</p>
 
Index: xymon/xymonproxy/xymonproxy.8
===================================================================
--- xymon.orig/xymonproxy/xymonproxy.8	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonproxy/xymonproxy.8	2012-07-23 23:41:15.000000000 +0200
@@ -48,7 +48,7 @@
 
 .IP "--listen=LOCALIP[:PORT]"
 Specifies the IP-adress where xymonproxy listens for incoming 
-connections. By default, xymonproxy listens on all IP-adresses
+connections. By default, xymonproxy listens on all IP-addresses
 assigned to the host. If no portnumber is given, port 1984
 will be used.
 
@@ -69,18 +69,18 @@
 .IP "--lqueue=N"
 Size of the listen-queue where incoming connections can
 queue up before being processed. This should be large to
-accomodate bursts of activity from clients. Default: 512.
+accommodate bursts of activity from clients. Default: 512.
 
 .IP "--daemon"
-Run in daemon mode, i.e. detach and run as a background proces.
+Run in daemon mode, i.e. detach and run as a background process.
 This is the default.
 
 .IP "--no-daemon"
-Runs xymonproxy as a foreground proces.
+Runs xymonproxy as a foreground process.
 
 .IP "--pidfile=FILENAME"
-Specifies the location of a file containing the proces-ID 
-of the xymonproxy daemon proces. Default: /var/run/xymonproxy.pid.
+Specifies the location of a file containing the process-ID 
+of the xymonproxy daemon process. Default: /var/run/xymonproxy.pid.
 
 .IP "--logfile=FILENAME"
 Sends all logging output to the specified file instead of stderr.
@@ -88,7 +88,7 @@
 .IP "--log-details"
 Log details (IP-address, message type and hostname) to the logfile.
 This can also be enabled and disabled at run-time by sending the
-xymonproxy proces a SIGUSR1 signal.
+xymonproxy process a SIGUSR1 signal.
 
 .IP "--debug"
 Enable debugging output.
@@ -126,13 +126,13 @@
 The number of other messages (data, notes, ack, query, ...)
 messages received from a client.
 
-.IP "Proxy ressources - Connection table size"
+.IP "Proxy resources - Connection table size"
 This is the number of connection table slots in the proxy.
 This measures the number of simultaneously active requests
 that the proxy has handled, and so gives an idea about the
 peak number of clients that the proxy has handled simultaneously.
 
-.IP "Proxy ressources - Buffer space"
+.IP "Proxy resources - Buffer space"
 This is the number of KB memory allocated for network buffers.
 
 .IP "Timeout details - reading from client"
Index: xymon/xymonproxy/xymonproxy.c
===================================================================
--- xymon.orig/xymonproxy/xymonproxy.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonproxy/xymonproxy.c	2012-07-23 23:41:15.000000000 +0200
@@ -241,7 +241,7 @@
 	unsigned long msgs_recovered = 0;
 	struct timespec timeinqueue = { 0, 0 };
 
-	/* Dont save the output from errprintf() */
+	/* Don'T save the output from errprintf() */
 	save_errbuf = 0;
 
 	memset(&laddr, 0, sizeof(laddr));
@@ -354,7 +354,7 @@
 			printf("\t--lqueue=N                  : Listen-queue size\n");
 			printf("\t--daemon                    : Run as a daemon\n");
 			printf("\t--no-daemon                 : Do not run as a daemon\n");
-			printf("\t--pidfile=FILENAME          : Save proces-ID of daemon to FILENAME\n");
+			printf("\t--pidfile=FILENAME          : Save process-ID of daemon to FILENAME\n");
 			printf("\t--logfile=FILENAME          : Log to FILENAME instead of stderr\n");
 			printf("\t--debug                     : Enable debugging output\n");
 			printf("\n");
@@ -491,7 +491,7 @@
 			}
 
 			p = stentry->buf;
-			p += sprintf(p, "combo\nstatus %s green %s Proxy up %s\n\nxymonproxy for Xymon version %s\n\nProxy statistics\n\nIncoming messages        : %10lu (%lu msgs/second)\nOutbound messages        : %10lu\n\nIncoming message distribution\n- Combo messages         : %10lu\n- Status messages        : %10lu\n  Messages merged        : %10lu\n  Resulting combos       : %10lu\n- Other messages         : %10lu\n\nProxy ressources\n- Connection table size  : %10d\n- Buffer space           : %10lu kByte\n",
+			p += sprintf(p, "combo\nstatus %s green %s Proxy up %s\n\nxymonproxy for Xymon version %s\n\nProxy statistics\n\nIncoming messages        : %10lu (%lu msgs/second)\nOutbound messages        : %10lu\n\nIncoming message distribution\n- Combo messages         : %10lu\n- Status messages        : %10lu\n  Messages merged        : %10lu\n  Resulting combos       : %10lu\n- Other messages         : %10lu\n\nProxy resources\n- Connection table size  : %10d\n- Buffer space           : %10lu kByte\n",
 				proxyname, timestamp, runtime_s, VERSION,
 				msgs_total, (msgs_total - msgs_total_last) / (now - laststatus),
 				msgs_delivered,
@@ -665,7 +665,7 @@
 							currmsg = nextmsg;
 						} while (currmsg);
 
-						/* We dont do anymore with this conn_t */
+						/* We don't do anymore with this conn_t */
 						cwalk->state = P_CLEANUP;
 						break;
 					}
Index: xymon/docs/manpages/man1/xymonnet.1.html
===================================================================
--- xymon.orig/docs/manpages/man1/xymonnet.1.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man1/xymonnet.1.html	2012-07-23 23:41:15.000000000 +0200
@@ -115,7 +115,7 @@
 deprecated and should not be used.
 <P>
 <DT>--dns=[ip|only|standard]<DD>
-Determines how xymonnet finds the IP adresses of the hosts to test. 
+Determines how xymonnet finds the IP addresses of the hosts to test. 
 By default (the &quot;standard&quot;), xymonnet does a DNS lookup of the hostname 
 to determine the IP address, unless the host has the &quot;testip&quot; 
 tag, or the DNS lookup fails.
@@ -281,7 +281,7 @@
 
 <BR>
 
-If not specifed, xymonnet uses the CONNTEST environment
+If not specified, xymonnet uses the CONNTEST environment
 variable to determine if it should perform the ping test
 or not. So if you prefer to use another tool to implement 
 ping checks, either set the CONNTEST environment variable 
@@ -598,7 +598,7 @@
 
 In practice, the maximum size of a single Xymon message
 sets a limit - the default value for the maximum message
-size is 32 KB, but that will easily accomodate 100 status
+size is 32 KB, but that will easily accommodate 100 status
 messages per transmission. So if you want to experiment
 with this setting, I suggest starting with a value of 10.
 <P>
Index: xymon/xymond/xymond.c
===================================================================
--- xymon.orig/xymond/xymond.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond.c	2012-07-23 23:41:15.000000000 +0200
@@ -62,7 +62,7 @@
 #define DISABLED_UNTIL_OK -1
 
 /*
- * The absolute maximum size we'll grow our buffers to accomodate an incoming message.
+ * The absolute maximum size we'll grow our buffers to accommodate an incoming message.
  * This is really just an upper bound to squash the bad guys trying to data-flood us. 
  */
 #define MAX_XYMON_INBUFSZ (10*1024*1024)	/* 10 MB */
@@ -1066,7 +1066,7 @@
 {
 	/*
 	 * This routine takes care of finding existing status log records, or
-	 * (if they dont exist) creating new ones for an incoming status.
+	 * (if they don't exist) creating new ones for an incoming status.
 	 *
 	 * "msg" contains an incoming message. First list is of the form "KEYWORD host,domain.test COLOR"
 	 */
@@ -1115,7 +1115,7 @@
 	colstr = strtok(NULL, " \t"); /* ... and the color (if any) */
 	if (colstr) {
 		*color = parse_color(colstr);
-		/* Dont create log-entries if we get a bad color spec. */
+		/* Don't create log-entries if we get a bad color spec. */
 		if (*color == -1) createlog = 0;
 	}
 	else createlog = 0;
@@ -1324,7 +1324,7 @@
 	if (!modifyonly && log->modifiers) {
 		/*
 		 * Original status message - check if there is an active modifier for the color.
-		 * We dont do this for status changes triggered by a "modify" command.
+		 * We don't do this for status changes triggered by a "modify" command.
 		 */
 		modifier_t *mwalk;
 		int mcolor = -1;
@@ -1437,7 +1437,7 @@
 		}
 
 		if (log->acktime > now) {
-			/* Dont need to do anything about an acked test */
+			/* Don't need to do anything about an acked test */
 		}
 		else {
 			/* The acknowledge has expired. Clear the timestamp and the message buffer */
@@ -1650,7 +1650,7 @@
 		log->histsynced = 1;
 
 		/*
-		 * Dont update the log->lastchange timestamp while DOWNTIME is active.
+		 * Don't update the log->lastchange timestamp while DOWNTIME is active.
 		 * (It is only seen as active if the color has been forced BLUE).
 		 */
 		if (!log->downtimeactive && (log->oldcolor != newcolor)) {
@@ -1800,7 +1800,7 @@
 		 *
 		 * We must determine the color based ONLY on the modifications that
 		 * have been reported.
-		 * The reason we dont include the original status color in the scan
+		 * The reason we don't include the original status color in the scan
 		 * is because the modifiers override the original status - and they
 		 * can make it both worse (green -> red) or better (red -> green).
 		 *
@@ -2098,7 +2098,7 @@
 			newack = (ackinfo_t *)malloc(sizeof(ackinfo_t));
 		}
 		else {
-			/* Drop the old data so we dont leak memory */
+			/* Drop the old data so we don't leak memory */
 			dbgprintf("Dropping old ackinfo data: From %s, msg=%s\n", newack->ackedby, newack->msg);
 			if (newack->ackedby) xfree(newack->ackedby); 
 			if (newack->msg) xfree(newack->msg);
@@ -3255,7 +3255,7 @@
 		}
 
 		/* 
-		 * We dont validate the ID, because "notes" may also send messages
+		 * We don't validate the ID, because "notes" may also send messages
 		 * for documenting pages or column-names. And the "usermsg" stuff can be
 		 * anything in the "ID" field. So we just insist that there IS an ID.
 		 */
Index: xymon/xymond/xymond_worker.c
===================================================================
--- xymon.orig/xymond/xymond_worker.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_worker.c	2012-07-23 23:41:15.000000000 +0200
@@ -389,7 +389,7 @@
 		/* idlemsg is used to return the idle message in case of timeouts. */
 		idlemsg = strdup("@@idle\n");
 
-		/* We dont want to block when reading data. */
+		/* We don't want to block when reading data. */
 		fcntl(inputfd, F_SETFL, O_NONBLOCK);
 	}
 
@@ -414,7 +414,7 @@
 			endpos = NULL;
 		}
 
-		seqnum = 0; /* After skipping, we dont know what to expect */
+		seqnum = 0; /* After skipping, we don't know what to expect */
 	}
 
 startagain:
@@ -472,7 +472,7 @@
 
 		if (needmoredata) {
 			if (maymove && (bufleft < EXTRABUFSPACE)) {
-				/* Buffer is almost full - move data to accomodate a large message. */
+				/* Buffer is almost full - move data to accommodate a large message. */
 				dbgprintf("Moving %d bytes to start of buffer\n", usedbytes);
 				memmove(buf, startpos, usedbytes);
 				startpos = buf;
@@ -585,7 +585,7 @@
 	{
 		/* 
 		 * Get and check the message sequence number.
-		 * We dont do this for network based workers, since the
+		 * We don't do this for network based workers, since the
 		 * sequence number is globally generated (by xymond)
 		 * but a network-based worker may only see some of the
 		 * messages (those that are not handled by other network-based
Index: xymon/xymonnet/xymonnet.1
===================================================================
--- xymon.orig/xymonnet/xymonnet.1	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/xymonnet.1	2012-07-23 23:41:15.000000000 +0200
@@ -90,7 +90,7 @@
 deprecated and should not be used.
 
 .IP --dns=[ip|only|standard]
-Determines how xymonnet finds the IP adresses of the hosts to test. 
+Determines how xymonnet finds the IP addresses of the hosts to test. 
 By default (the "standard"), xymonnet does a DNS lookup of the hostname 
 to determine the IP address, unless the host has the "testip" 
 tag, or the DNS lookup fails.
@@ -236,7 +236,7 @@
 variable in 
 .I xymonserver.cfg(5).
 .br
-If not specifed, xymonnet uses the CONNTEST environment
+If not specified, xymonnet uses the CONNTEST environment
 variable to determine if it should perform the ping test
 or not. So if you prefer to use another tool to implement 
 ping checks, either set the CONNTEST environment variable 
@@ -510,7 +510,7 @@
 .br
 In practice, the maximum size of a single Xymon message
 sets a limit - the default value for the maximum message
-size is 32 KB, but that will easily accomodate 100 status
+size is 32 KB, but that will easily accommodate 100 status
 messages per transmission. So if you want to experiment
 with this setting, I suggest starting with a value of 10.
 
Index: xymon/docs/manpages/man1/report.cgi.1.html
===================================================================
--- xymon.orig/docs/manpages/man1/report.cgi.1.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man1/report.cgi.1.html	2012-07-23 23:41:15.000000000 +0200
@@ -22,7 +22,7 @@
 <B>report.cgi</B>
 is invoked as a CGI script via the report.sh CGI wrapper.
 It triggers the generation of a Xymon availability
-report for the timeperiod specified by the CGI paramaters.
+report for the timeperiod specified by the CGI parameters.
 <P>
 report.cgi is passed a QUERY_STRING environment variable with the
 following parameters:
Index: xymon/docs/manpages/man8/xymond.8.html
===================================================================
--- xymon.orig/docs/manpages/man8/xymond.8.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man8/xymond.8.html	2012-07-23 23:41:15.000000000 +0200
@@ -81,7 +81,7 @@
 <DT>--listen=IP[:PORT]<DD>
 Specifies the IP-address and port where xymond will listen for incoming
 connections. By default, xymond listens on IP 0.0.0.0 (i.e. all IP-
-adresses available on the host) and port 1984.
+addresses available on the host) and port 1984.
 <P>
 <DT>--daemon<DD>
 xymond is normally started by 
@@ -146,7 +146,7 @@
 are pushed to the CLICHG channel. If this option is specified with
 no parameter list, all status columns that go into an alert state
 will trigger the client data to be sent to the CLICHG channel. If
-a paramater list is added to this option, only those status columns
+a parameter list is added to this option, only those status columns
 listed in the list will cause the client data to be sent to the
 CLICHG channel. Several column names can be listed, separated by
 commas. If all columns are given as &quot;!COLUMNNAME&quot;, then all status
@@ -158,12 +158,12 @@
 <P>
 By default, any host can send status-updates. If this option is used, 
 then status-updates are accepted only if they are sent by one of the 
-IP-adresses listed here, or if they are sent from the IP-address of the 
+IP-addresses listed here, or if they are sent from the IP-address of the 
 host that the updates pertains to (this is to allow Xymon clients to send in their
 own status updates, without having to list all clients here). So typically
 you will need to list your servers running network tests here.
 <P>
-The format of this option is a list of IP-adresses, optionally with a
+The format of this option is a list of IP-addresses, optionally with a
 network mask in the form of the number of bits. E.g. if you want to 
 accept status-updates from the host 172.16.10.2, you would use
 <BR>
Index: xymon/docs/manpages/man8/xymond_alert.8.html
===================================================================
--- xymon.orig/docs/manpages/man8/xymond_alert.8.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man8/xymond_alert.8.html	2012-07-23 23:41:15.000000000 +0200
@@ -82,7 +82,7 @@
 
 <B>--group=GROUPNAME</B>
 
-The GROUPNAME paramater is a groupid string from the analysis.cfg
+The GROUPNAME parameter is a groupid string from the analysis.cfg
 file.
 <BR>
 
Index: xymon/web/report.cgi.1
===================================================================
--- xymon.orig/web/report.cgi.1	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/report.cgi.1	2012-07-23 23:41:15.000000000 +0200
@@ -8,7 +8,7 @@
 \fBreport.cgi\fR
 is invoked as a CGI script via the report.sh CGI wrapper.
 It triggers the generation of a Xymon availability
-report for the timeperiod specified by the CGI paramaters.
+report for the timeperiod specified by the CGI parameters.
 
 report.cgi is passed a QUERY_STRING environment variable with the
 following parameters:
Index: xymon/xymond/xymond.8
===================================================================
--- xymon.orig/xymond/xymond.8	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond.8	2012-07-23 23:41:15.000000000 +0200
@@ -63,7 +63,7 @@
 .IP "--listen=IP[:PORT]"
 Specifies the IP-address and port where xymond will listen for incoming
 connections. By default, xymond listens on IP 0.0.0.0 (i.e. all IP-
-adresses available on the host) and port 1984.
+addresses available on the host) and port 1984.
 
 .IP "--daemon"
 xymond is normally started by 
@@ -126,7 +126,7 @@
 are pushed to the CLICHG channel. If this option is specified with
 no parameter list, all status columns that go into an alert state
 will trigger the client data to be sent to the CLICHG channel. If
-a paramater list is added to this option, only those status columns
+a parameter list is added to this option, only those status columns
 listed in the list will cause the client data to be sent to the
 CLICHG channel. Several column names can be listed, separated by
 commas. If all columns are given as "!COLUMNNAME", then all status
@@ -138,12 +138,12 @@
 
 By default, any host can send status-updates. If this option is used, 
 then status-updates are accepted only if they are sent by one of the 
-IP-adresses listed here, or if they are sent from the IP-address of the 
+IP-addresses listed here, or if they are sent from the IP-address of the 
 host that the updates pertains to (this is to allow Xymon clients to send in their
 own status updates, without having to list all clients here). So typically
 you will need to list your servers running network tests here.
 
-The format of this option is a list of IP-adresses, optionally with a
+The format of this option is a list of IP-addresses, optionally with a
 network mask in the form of the number of bits. E.g. if you want to 
 accept status-updates from the host 172.16.10.2, you would use
 .br
Index: xymon/xymond/xymond_alert.8
===================================================================
--- xymon.orig/xymond/xymond_alert.8	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_alert.8	2012-07-23 23:41:15.000000000 +0200
@@ -56,7 +56,7 @@
 The SECONDS parameter is the duration of the alert in seconds. 
 .br
 .BI "--group=GROUPNAME"
-The GROUPNAME paramater is a groupid string from the analysis.cfg
+The GROUPNAME parameter is a groupid string from the analysis.cfg
 file.
 .br
 .BI "--time=TIMESTRING"
Index: xymon/xymond/xymond_sample.c
===================================================================
--- xymon.orig/xymond/xymond_sample.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_sample.c	2012-07-23 23:41:15.000000000 +0200
@@ -52,7 +52,7 @@
 			 * You can have a timeout when waiting for new
 			 * messages. If it happens, you will get a "@@idle\n"
 			 * message with sequence number 0.
-			 * If you dont want a timeout, just pass a NULL for the timeout parameter.
+			 * If you don't want a timeout, just pass a NULL for the timeout parameter.
 			 */
 			timeout = (struct timespec *)(malloc(sizeof(struct timespec)));
 			timeout->tv_sec = (atoi(argv[argi]+10));
@@ -89,8 +89,8 @@
 		 * All messages have a sequence number ranging from 1-999999.
 		 *
 		 *
-		 * The first paramater is the channel you're handling - this is used
-		 * to determine the needed input buffer size. If you dont know what
+		 * The first parameter is the channel you're handling - this is used
+		 * to determine the needed input buffer size. If you don't know what
 		 * channel you're handling, use C_LAST and you'll get a buffer large
 		 * enough for the largest channel.
 		 *
Index: xymon/README
===================================================================
--- xymon.orig/README	2012-07-23 23:39:36.000000000 +0200
+++ xymon/README	2012-07-23 23:41:15.000000000 +0200
@@ -82,7 +82,7 @@
 
 or on the web http://lists.xymon.com/mailman/listinfo/xymon
 
-Please note that mail sent from adresses that are not subscribed
+Please note that mail sent from addresses that are not subscribed
 to the list need to go through a moderator approval, and therefore
 may not show up on the list for some time.
 
Index: xymon/RELEASENOTES
===================================================================
--- xymon.orig/RELEASENOTES	2012-07-23 23:39:36.000000000 +0200
+++ xymon/RELEASENOTES	2012-07-23 23:41:15.000000000 +0200
@@ -210,8 +210,8 @@
 Modem-bank testing ("dialup" host definition) does not work
 ===========================================================
 Previous versions of Xymon supported the Big Brother "dialup"
-host definition for pinging a range of IP-adresses, e.g. a
-modem-bank or a pool of IP-adresses handed out by a DHCP server.
+host definition for pinging a range of IP-addresses, e.g. a
+modem-bank or a pool of IP-addresses handed out by a DHCP server.
 This feature is not supported in Xymon 4.2, but may re-appear
 in a different form in a later version.
 (Note: This has nothing to do with the "dialup" directive 
Index: xymon/client/localclient.cfg
===================================================================
--- xymon.orig/client/localclient.cfg	2012-07-23 23:40:46.000000000 +0200
+++ xymon/client/localclient.cfg	2012-07-23 23:41:15.000000000 +0200
@@ -257,7 +257,7 @@
 #             the output from netstat. This is typically "10.0.0.1:80" for the IP 
 #             10.0.0.1, port 80. Or "*:80" for any local address, port 80.
 #             NB: The Xymon clients normally report only the numeric data for
-#                 IP-adresses and port-numbers, so you must specify the port
+#                 IP-addresses and port-numbers, so you must specify the port
 #                 number (e.g. "80") instead of the service name ("www").
 #             "state" causes only the sockets in the specified state to be included;
 #             it is usually LISTEN or ESTABLISHED.
@@ -312,7 +312,7 @@
 # located in the hosts.cfg file, via the hosts' page/subpage/subparent
 # directives. This can be convenient to pick out all hosts on a specific page.
 #
-# Rules can be dependant on time-of-day, using the standard Xymon syntax 
+# Rules can be dependent on time-of-day, using the standard Xymon syntax 
 # (the hosts.cfg(5) about the NKTIME parameter). E.g. "TIME=W:0800:2200"
 # applied to a rule will make this rule active only on week-days between
 # 8AM and 10PM.
Index: xymon/common/hosts.cfg.5
===================================================================
--- xymon.orig/common/hosts.cfg.5	2012-07-23 23:39:36.000000000 +0200
+++ xymon/common/hosts.cfg.5	2012-07-23 23:41:15.000000000 +0200
@@ -103,11 +103,11 @@
 on other hosts as well.
 
 .IP multihomed
-Tell Xymon that data from the host can arrive from multiple IP-adresses.
+Tell Xymon that data from the host can arrive from multiple IP-addresses.
 By default, Xymon will warn if it sees data for one host coming from
-different IP-adresses, because this usually indicates a mis-configuration
+different IP-addresses, because this usually indicates a mis-configuration
 of the hostname on at least one of the servers involved. Some hosts
-with multiple IP-adresses may use different IP's for sending data to
+with multiple IP-addresses may use different IP's for sending data to
 Xymon, however. This tag disables the check of source IP when receiving
 data.
 
@@ -723,9 +723,9 @@
 decides the testname for the connectivity test.
 
 .IP "conn={best,|worst,}IP1[,IP2...]"
-This adds additional IP-adresses that are pinged during the
+This adds additional IP-addresses that are pinged during the
 normal "conn" test. So the normal "conn" test must be enabled
-(the default) before this tag has any effect. The IP-adresses
+(the default) before this tag has any effect. The IP-addresses
 listed here are pinged in addition to the main IP-address.
 
 When multiple IP's are pinged, you can choose if ALL IP's
Index: xymon/common/xymonclient.cfg.5
===================================================================
--- xymon.orig/common/xymonclient.cfg.5	2012-07-23 23:39:36.000000000 +0200
+++ xymon/common/xymonclient.cfg.5	2012-07-23 23:41:15.000000000 +0200
@@ -15,7 +15,7 @@
 Chosen when the Xymon client was compiled.
 
 .IP XYMSERVERS
-List of IP-adresses of Xymon servers. Data will be sent to
+List of IP-addresses of Xymon servers. Data will be sent to
 all of the servers listed here. This setting is only used if 
 XYMSRV=0.0.0.0.
 
Index: xymon/common/xymonserver.cfg.5
===================================================================
--- xymon.orig/common/xymonserver.cfg.5	2012-07-23 23:39:36.000000000 +0200
+++ xymon/common/xymonserver.cfg.5	2012-07-23 23:41:15.000000000 +0200
@@ -347,9 +347,9 @@
 Default: $XYMONSERVERIP
 
 .IP XYMSERVERS
-List of IP-adresses. Clients and network test tools will try to
+List of IP-addresses. Clients and network test tools will try to
 send status reports to a Xymon server running on each of these
-adresses. This setting is only used if XYMSRV=0.0.0.0.
+addresses. This setting is only used if XYMSRV=0.0.0.0.
 
 .IP XYMONDPORT
 The portnumber for used to contact the
@@ -671,7 +671,7 @@
 the maximum number of rows before repeating the column headings
 on a webpage. This sets the default value for the 
 .I xymongen(1)
-"--maxrows" option; if the command-line option is also specifed,
+"--maxrows" option; if the command-line option is also specified,
 then it overrides this environment variable. Note that unlike
 Jeff's patch, xymongen implements this for both the "All non-green" 
 page and all other pages (xymon.html, subpages, critical.html). 
Index: xymon/docs/manpages/man1/xymonping.1.html
===================================================================
--- xymon.orig/docs/manpages/man1/xymonping.1.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man1/xymonping.1.html	2012-07-23 23:41:15.000000000 +0200
@@ -13,7 +13,7 @@
 <A NAME="lbAC">&nbsp;</A>
 <H2>SYNOPSIS</H2>
 
-<B>xymonping [--retries=N] [--timeout=N] [IP-adresses]</B>
+<B>xymonping [--retries=N] [--timeout=N] [IP-addresses]</B>
 
 <P>
 <A NAME="lbAD">&nbsp;</A>
@@ -24,18 +24,18 @@
 is used for ping testing of the hosts monitored by the
 <I><A HREF="../man7/xymon.7.html">xymon</A>(7)</I>
 
-monitoring system. It reads a list of IP adresses from stdin,
+monitoring system. It reads a list of IP addresses from stdin,
 and performs a &quot;ping&quot; check to see if these hosts are alive.
 It is normally invoked by the
 <I><A HREF="../man1/xymonnet.1.html">xymonnet</A>(1)</I>
 
 utility, which performs all of the Xymon network tests.
 <P>
-Optionally, if a list of IP-adresses is passed as command-line
+Optionally, if a list of IP-addresses is passed as command-line
 arguments, it will ping those IP's instead of reading them 
 from stdin.
 <P>
-xymonping only handles IP-adresses, not hostnames.
+xymonping only handles IP-addresses, not hostnames.
 <P>
 xymonping was inspired by the
 <I><A HREF="../man1/fping.1.html">fping</A>(1)</I>
@@ -46,10 +46,10 @@
 of &quot;fping -Ae&quot;.
 <P>
 xymonping probes multiple systems in parallel, and the runtime
-is therefore mostly dependant on the timeout-setting and the
+is therefore mostly dependent on the timeout-setting and the
 number of retries. With the default options, xymonping takes
 approximately 18 seconds to ping all hosts (tested with an
-input set of 1500 IP adresses).
+input set of 1500 IP addresses).
 <P>
 <A NAME="lbAE">&nbsp;</A>
 <H2>SUID-ROOT INSTALLATION REQUIRED</H2>
Index: xymon/docs/manpages/man5/analysis.cfg.5.html
===================================================================
--- xymon.orig/docs/manpages/man5/analysis.cfg.5.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man5/analysis.cfg.5.html	2012-07-23 23:41:15.000000000 +0200
@@ -163,7 +163,7 @@
 <P>
 Example: Go yellow if more than 20% swap is used, and red if
 more than 40% swap is used or the actual memory utilisation exceeds
-90%. Dont alert on physical memory usage.
+90%. Don't alert on physical memory usage.
 <DL COMPACT>
 <DT><DD>
 <PRE>
@@ -437,12 +437,12 @@
 &quot;addr&quot; is a (partial) local address specification in the format used on
 the output from netstat.
 <DT>EXLOCAL=addr<DD>
-Exclude certain local adresses from the rule.
+Exclude certain local addresses from the rule.
 <DT>REMOTE=addr<DD>
 &quot;addr&quot; is a (partial) remote address specification in the format used on
 the output from netstat.
 <DT>EXREMOTE=addr<DD>
-Exclude certain remote adresses from the rule.
+Exclude certain remote addresses from the rule.
 <DT>STATE=state<DD>
 Causes only the sockets in the specified state to be included, &quot;state&quot;
 is usually LISTEN or ESTABLISHED but can be any socket state reported by
@@ -454,7 +454,7 @@
 
 &quot;addr&quot; is typically &quot;10.0.0.1:80&quot; for the IP 10.0.0.1, port 80. 
 Or &quot;*:80&quot; for any local address, port 80. Note that the Xymon clients 
-normally report only the numeric data for IP-adresses and port-numbers, 
+normally report only the numeric data for IP-addresses and port-numbers, 
 so you must specify the port number (e.g. &quot;80&quot;) instead of the service 
 name (&quot;www&quot;).
 <BR>
Index: xymon/docs/manpages/man5/hosts.cfg.5.html
===================================================================
--- xymon.orig/docs/manpages/man5/hosts.cfg.5.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man5/hosts.cfg.5.html	2012-07-23 23:41:15.000000000 +0200
@@ -130,11 +130,11 @@
 on other hosts as well.
 <P>
 <DT>multihomed<DD>
-Tell Xymon that data from the host can arrive from multiple IP-adresses.
+Tell Xymon that data from the host can arrive from multiple IP-addresses.
 By default, Xymon will warn if it sees data for one host coming from
-different IP-adresses, because this usually indicates a mis-configuration
+different IP-addresses, because this usually indicates a mis-configuration
 of the hostname on at least one of the servers involved. Some hosts
-with multiple IP-adresses may use different IP's for sending data to
+with multiple IP-addresses may use different IP's for sending data to
 Xymon, however. This tag disables the check of source IP when receiving
 data.
 <P>
@@ -811,9 +811,9 @@
 decides the testname for the connectivity test.
 <P>
 <DT>conn={best,|worst,}IP1[,IP2...]<DD>
-This adds additional IP-adresses that are pinged during the
+This adds additional IP-addresses that are pinged during the
 normal &quot;conn&quot; test. So the normal &quot;conn&quot; test must be enabled
-(the default) before this tag has any effect. The IP-adresses
+(the default) before this tag has any effect. The IP-addresses
 listed here are pinged in addition to the main IP-address.
 <P>
 When multiple IP's are pinged, you can choose if ALL IP's
Index: xymon/docs/manpages/man5/xymonclient.cfg.5.html
===================================================================
--- xymon.orig/docs/manpages/man5/xymonclient.cfg.5.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man5/xymonclient.cfg.5.html	2012-07-23 23:41:15.000000000 +0200
@@ -29,7 +29,7 @@
 Chosen when the Xymon client was compiled.
 <P>
 <DT>XYMSERVERS<DD>
-List of IP-adresses of Xymon servers. Data will be sent to
+List of IP-addresses of Xymon servers. Data will be sent to
 all of the servers listed here. This setting is only used if 
 XYMSRV=0.0.0.0.
 <P>
Index: xymon/docs/manpages/man5/xymonserver.cfg.5.html
===================================================================
--- xymon.orig/docs/manpages/man5/xymonserver.cfg.5.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man5/xymonserver.cfg.5.html	2012-07-23 23:41:15.000000000 +0200
@@ -399,9 +399,9 @@
 Default: $XYMONSERVERIP
 <P>
 <DT>XYMSERVERS<DD>
-List of IP-adresses. Clients and network test tools will try to
+List of IP-addresses. Clients and network test tools will try to
 send status reports to a Xymon server running on each of these
-adresses. This setting is only used if XYMSRV=0.0.0.0.
+addresses. This setting is only used if XYMSRV=0.0.0.0.
 <P>
 <DT>XYMONDPORT<DD>
 The portnumber for used to contact the
@@ -766,7 +766,7 @@
 on a webpage. This sets the default value for the 
 <I><A HREF="../man1/xymongen.1.html">xymongen</A>(1)</I>
 
-&quot;--maxrows&quot; option; if the command-line option is also specifed,
+&quot;--maxrows&quot; option; if the command-line option is also specified,
 then it overrides this environment variable. Note that unlike
 Jeff's patch, xymongen implements this for both the &quot;All non-green&quot; 
 page and all other pages (xymon.html, subpages, critical.html). 
Index: xymon/docs/xymon-alerts.html
===================================================================
--- xymon.orig/docs/xymon-alerts.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/xymon-alerts.html	2012-07-23 23:41:15.000000000 +0200
@@ -8,7 +8,7 @@
 <body>
 <h1>Configuring Xymon Alerts</h1>
 <p>When something breaks, you want to know about it. Since you probably 
-dont have the Xymon webpages in view all of the time, Xymon can 
+don't have the Xymon webpages in view all of the time, Xymon can 
 generate alerts to draw your attention to problems. Alerts can go out
 as e-mail, or Xymon can run a script that takes care of activating
 a pager, sending an SMS, or however you prefer to get alerted.</p>
@@ -172,7 +172,7 @@
 with Xymon.</p>
 
 <h3><a name="macros">Save on the typing - use macros</a></h3>
-<p>Say you have a long list of hosts or e-mail adresses that you want to use several times throughout the
+<p>Say you have a long list of hosts or e-mail addresses that you want to use several times throughout the
 alerts.cfg file. Do you have to write the full list every time ? No:<br>
 <pre>
 	$WEBHOSTS=%(www|intranet|support|mail).foo.com 
@@ -185,7 +185,7 @@
 </pre><br>
 The first line defines <em>$WEBHOSTS</em> as a <em>macro</em>. So everywhere else in the file,
 &quot;$WEBHOSTS&quot; is automatically replaced with &quot;&#37;(www|intranet|support|mail).foo.com&quot;
-before the rule is processed. The same method can be used for recipients, e.g. e-mail adresses.
+before the rule is processed. The same method can be used for recipients, e.g. e-mail addresses.
 In fact, you can put an entire line into a macro:<br>
 <pre>
 	$UNIXSUPPORT=MAIL unixsupport@foo.com TIME=*:0800:1600 SERVICE=cpu,disk,memory
@@ -205,7 +205,7 @@
 
 <h3><a name="ignorerules">There are rules ... and exceptions: IGNORE</h3>
 <p>A common scenario is where you handle most of the alerts with a wildcard rule, but
-there is <i>just</i> that one exception where you dont want any cpu alerts
+there is <i>just</i> that one exception where you don't want any cpu alerts
 from the marketing server on Thursday afternoon. Then it is time for the 
 IGNORE recipient:<br>
 <pre>
Index: xymon/rpm/xymon-client.default
===================================================================
--- xymon.orig/rpm/xymon-client.default	2012-07-23 23:39:36.000000000 +0200
+++ xymon/rpm/xymon-client.default	2012-07-23 23:41:15.000000000 +0200
@@ -2,7 +2,7 @@
 
 # You MUST set the list of Xymon servers that this
 # client reports to.
-# It is good to use IP-adresses here instead of DNS 
+# It is good to use IP-addresses here instead of DNS 
 # names - DNS might not work if there's a problem.
 #
 # E.g. (a single Xymon server)
Index: xymon/web/svcstatus-info.c
===================================================================
--- xymon.orig/web/svcstatus-info.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/svcstatus-info.c	2012-07-23 23:41:15.000000000 +0200
@@ -24,7 +24,7 @@
 #include <unistd.h>
 #include <utime.h>
 
-/* The following is for the DNS lookup we perform on DHCP adresses */
+/* The following is for the DNS lookup we perform on DHCP addresses */
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
Index: xymon/xymond/analysis.cfg.5
===================================================================
--- xymon.orig/xymond/analysis.cfg.5	2012-07-23 23:40:46.000000000 +0200
+++ xymon/xymond/analysis.cfg.5	2012-07-23 23:41:15.000000000 +0200
@@ -121,7 +121,7 @@
 .sp
 Example: Go yellow if more than 20% swap is used, and red if
 more than 40% swap is used or the actual memory utilisation exceeds
-90%. Dont alert on physical memory usage.
+90%. Don't alert on physical memory usage.
 .IP
 .nf
 MEMSWAP 20 40
@@ -359,12 +359,12 @@
 "addr" is a (partial) local address specification in the format used on
 the output from netstat.
 .IP "EXLOCAL=addr"
-Exclude certain local adresses from the rule.
+Exclude certain local addresses from the rule.
 .IP "REMOTE=addr"
 "addr" is a (partial) remote address specification in the format used on
 the output from netstat.
 .IP "EXREMOTE=addr"
-Exclude certain remote adresses from the rule.
+Exclude certain remote addresses from the rule.
 .IP "STATE=state"
 Causes only the sockets in the specified state to be included, "state"
 is usually LISTEN or ESTABLISHED but can be any socket state reported by
@@ -374,7 +374,7 @@
 .LP
 "addr" is typically "10.0.0.1:80" for the IP 10.0.0.1, port 80. 
 Or "*:80" for any local address, port 80. Note that the Xymon clients 
-normally report only the numeric data for IP-adresses and port-numbers, 
+normally report only the numeric data for IP-addresses and port-numbers, 
 so you must specify the port number (e.g. "80") instead of the service 
 name ("www").
 .br
Index: xymon/xymond/etcfiles/analysis.cfg
===================================================================
--- xymon.orig/xymond/etcfiles/analysis.cfg	2012-07-23 23:40:46.000000000 +0200
+++ xymon/xymond/etcfiles/analysis.cfg	2012-07-23 23:41:15.000000000 +0200
@@ -258,7 +258,7 @@
 #             the output from netstat. This is typically "10.0.0.1:80" for the IP 
 #             10.0.0.1, port 80. Or "*:80" for any local address, port 80.
 #             NB: The Xymon clients normally report only the numeric data for
-#                 IP-adresses and port-numbers, so you must specify the port
+#                 IP-addresses and port-numbers, so you must specify the port
 #                 number (e.g. "80") instead of the service name ("www").
 #             "state" causes only the sockets in the specified state to be included;
 #             it is usually LISTEN or ESTABLISHED.
@@ -313,7 +313,7 @@
 # located in the hosts.cfg file, via the hosts' page/subpage/subparent
 # directives. This can be convenient to pick out all hosts on a specific page.
 #
-# Rules can be dependant on time-of-day, using the standard Xymon syntax 
+# Rules can be dependent on time-of-day, using the standard Xymon syntax 
 # (the hosts.cfg(5) about the NKTIME parameter). E.g. "TIME=W:0800:2200"
 # applied to a rule will make this rule active only on week-days between
 # 8AM and 10PM.
Index: xymon/xymonnet/xymonping.1
===================================================================
--- xymon.orig/xymonnet/xymonping.1	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/xymonping.1	2012-07-23 23:41:15.000000000 +0200
@@ -2,23 +2,23 @@
 .SH NAME
 xymonping \- Xymon ping tool
 .SH SYNOPSIS
-.B "xymonping [--retries=N] [--timeout=N] [IP-adresses]"
+.B "xymonping [--retries=N] [--timeout=N] [IP-addresses]"
 
 .SH DESCRIPTION
 .I xymonping(1)
 is used for ping testing of the hosts monitored by the
 .I xymon(7)
-monitoring system. It reads a list of IP adresses from stdin,
+monitoring system. It reads a list of IP addresses from stdin,
 and performs a "ping" check to see if these hosts are alive.
 It is normally invoked by the
 .I xymonnet(1)
 utility, which performs all of the Xymon network tests.
 
-Optionally, if a list of IP-adresses is passed as command-line
+Optionally, if a list of IP-addresses is passed as command-line
 arguments, it will ping those IP's instead of reading them 
 from stdin.
 
-xymonping only handles IP-adresses, not hostnames.
+xymonping only handles IP-addresses, not hostnames.
 
 xymonping was inspired by the
 .I fping(1)
@@ -28,10 +28,10 @@
 of "fping -Ae".
 
 xymonping probes multiple systems in parallel, and the runtime
-is therefore mostly dependant on the timeout-setting and the
+is therefore mostly dependent on the timeout-setting and the
 number of retries. With the default options, xymonping takes
 approximately 18 seconds to ping all hosts (tested with an
-input set of 1500 IP adresses).
+input set of 1500 IP addresses).
 
 .SH SUID-ROOT INSTALLATION REQUIRED
 xymonping needs to be installed with suid-root privileges,
Index: xymon/build/setup-newfiles.c
===================================================================
--- xymon.orig/build/setup-newfiles.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/build/setup-newfiles.c	2012-07-23 23:41:15.000000000 +0200
@@ -67,7 +67,7 @@
 		if (stat(destfn, &st) == 0) {
 			/* Destination file exists, see if it's a previous version */
 
-			if (sumbuf == NULL) continue; /* No md5-data, dont overwrite an existing file */
+			if (sumbuf == NULL) continue; /* No md5-data, don't overwrite an existing file */
 			if (!S_ISREG(st.st_mode)) continue;
 
 			fd = fopen(destfn, "r"); if (fd == NULL) continue;
@@ -99,13 +99,13 @@
 
 			infd = fopen(srcfn, "r");
 			if (infd == NULL) {
-				/* Dont know how this can happen, but .. */
+				/* Don't know how this can happen, but .. */
 				fprintf(stderr, "Cannot open input file %s: %s\n", srcfn, strerror(errno));
 				return 1;
 			}
 			outfd = fopen(destfn, "w");
 			if (outfd == NULL) {
-				/* Dont know how this can happen, but .. */
+				/* Don't know how this can happen, but .. */
 				fprintf(stderr, "Cannot create output file %s: %s\n", destfn, strerror(errno));
 				return 1;
 			}
Index: xymon/client/logfetch.c
===================================================================
--- xymon.orig/client/logfetch.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/client/logfetch.c	2012-07-23 23:41:15.000000000 +0200
@@ -37,7 +37,7 @@
 #include "libxymon.h"
 
 /* Is it ok for these to be hardcoded ? */
-#define MAXCHECK   102400   /* When starting, dont look at more than 100 KB of data */
+#define MAXCHECK   102400   /* When starting, don't look at more than 100 KB of data */
 #define MAXMINUTES 30
 #define POSCOUNT ((MAXMINUTES / 5) + 1)
 #define LINES_AROUND_TRIGGER 5
Index: xymon/client/msgcache.c
===================================================================
--- xymon.orig/client/msgcache.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/client/msgcache.c	2012-07-23 23:41:15.000000000 +0200
@@ -205,7 +205,7 @@
 			addtobuffer(conn->msgbuf, client_response);
 
 			/* 
-			 * Dont drop the client response data. If for some reason
+			 * Don't drop the client response data. If for some reason
 			 * the "client" request is repeated, he should still get
 			 * the right answer that we have.
 			 */
@@ -284,7 +284,7 @@
 	struct sigaction sa;
 	int opt;
 
-	/* Dont save the output from errprintf() */
+	/* Don't save the output from errprintf() */
 	save_errbuf = 0;
 
 	memset(&laddr, 0, sizeof(laddr));
Index: xymon/client/xymonclient-freebsd.sh
===================================================================
--- xymon.orig/client/xymonclient-freebsd.sh	2012-07-23 23:39:36.000000000 +0200
+++ xymon/client/xymonclient-freebsd.sh	2012-07-23 23:41:15.000000000 +0200
@@ -45,7 +45,7 @@
 echo "[ports]"
 (netstat -na -f inet; netstat -na -f inet6) | grep "^tcp"
 echo "[ps]"
-# Dont use "args". "command" works also in FreeBSD 4.x.
+# Don't use "args". "command" works also in FreeBSD 4.x.
 ps -ax -ww -o pid,ppid,user,start,state,pri,pcpu,cputime,pmem,rss,vsz,command
 
 # $TOP must be set, the install utility should do that for us if it exists.
Index: xymon/client/xymonclient-sunos.sh
===================================================================
--- xymon.orig/client/xymonclient-sunos.sh	2012-07-23 23:39:36.000000000 +0200
+++ xymon/client/xymonclient-sunos.sh	2012-07-23 23:41:15.000000000 +0200
@@ -25,7 +25,7 @@
 # Print the root filesystem first, with the header, and those fs's that have the same type.
 ROOTFSTYPE=`/bin/df -n / | awk '{print $3}'`
 /bin/df -F $ROOTFSTYPE -k
-# Then see what fs types are in use, and weed out those we dont want.
+# Then see what fs types are in use, and weed out those we don't want.
 FSTYPES=`/bin/df -n -l|cut -d: -f2 | awk '{print $1}'|egrep -v "^${ROOTFSTYPE}|^proc|^fd|^mntfs|^ctfs|^devfs|^objfs|^nfs|^lofs"|sort|uniq`
 set $FSTYPES
 while test "$1" != ""; do
Index: xymon/client/xymonclient.cfg.DIST
===================================================================
--- xymon.orig/client/xymonclient.cfg.DIST	2012-07-23 23:40:24.000000000 +0200
+++ xymon/client/xymonclient.cfg.DIST	2012-07-23 23:41:15.000000000 +0200
@@ -6,7 +6,7 @@
 
 PATH="/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/lib/xymon/client/bin"  # PATH setting for the client scripts.
 
-# You normally dont need to modify anything below here
+# You normally don't need to modify anything below here
 XYMONDPORT="1984"                   # Portnumber where xymond listens
 XYMONCLIENTHOME="/usr/lib/xymon/client"
 XYMONHOME="$XYMONCLIENTHOME"       # Directory for the Xymon client files
Index: xymon/common/tasks.cfg.5
===================================================================
--- xymon.orig/common/tasks.cfg.5	2012-07-23 23:39:36.000000000 +0200
+++ xymon/common/tasks.cfg.5	2012-07-23 23:41:15.000000000 +0200
@@ -89,7 +89,7 @@
 
 The \fBGROUP\fR keyword can be used to limit the number of tasks 
 that may run simultaneously. E.g. if you are generating multiple
-pagesets of webpages, you dont want them to run at the same time.
+pagesets of webpages, you don't want them to run at the same time.
 Putting them into a GROUP will cause xymonlaunch to delay the start
 of new tasks, so that only one task will run per group. You can
 change the limit by defining the group before the tasks, with
Index: xymon/docs/configure.txt
===================================================================
--- xymon.orig/docs/configure.txt	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/configure.txt	2012-07-23 23:41:15.000000000 +0200
@@ -105,7 +105,7 @@
 top-level directory. I can set this up if you tell me
 what group-ID your webserver runs with. This is typically
 'nobody' or 'apache' or 'www-data'
-If you dont know, just hit ENTER and we will handle it later.
+If you don't know, just hit ENTER and we will handle it later.
 
 What group-ID does your webserver use ?
 www-data
Index: xymon/docs/manpages/man1/combostatus.1.html
===================================================================
--- xymon.orig/docs/manpages/man1/combostatus.1.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man1/combostatus.1.html	2012-07-23 23:41:15.000000000 +0200
@@ -62,7 +62,7 @@
 combostatus.
 <P>
 <DT>--no-update<DD>
-Dont send any status messages - instead, the result of the combotests
+Don't send any status messages - instead, the result of the combotests
 is simply dumped to stdout. Useful for debugging.
 <P>
 <P>
Index: xymon/docs/manpages/man1/xymongen.1.html
===================================================================
--- xymon.orig/docs/manpages/man1/xymongen.1.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man1/xymongen.1.html	2012-07-23 23:41:15.000000000 +0200
@@ -550,7 +550,7 @@
 
 The syntax is identical to the normal &quot;page&quot; and &quot;subpage&quot;
 directives in hosts.cfg, but the directive is prefixed with
-the pageset name. Dont put any hosts in-between the page
+the pageset name. Don't put any hosts in-between the page
 and subpage directives - just add all the directives at
 the top of the hosts.cfg file.
 <BR>
Index: xymon/docs/manpages/man5/alerts.cfg.5.html
===================================================================
--- xymon.orig/docs/manpages/man5/alerts.cfg.5.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man5/alerts.cfg.5.html	2012-07-23 23:41:15.000000000 +0200
@@ -170,7 +170,7 @@
 
 This is used to define a recipient that does NOT trigger any alerts, and also terminates the
 search for more recipients. It is useful if you have a rule that handles most alerts, but
-there is just that one particular server where you dont want cpu alerts on Monday morning.
+there is just that one particular server where you don't want cpu alerts on Monday morning.
 Note that the IGNORE recipient always has the STOP flag defined, so when the IGNORE recipient
 is matched, no more recipients will be considered. So the location of this recipient in your
 set of recipients is important.
Index: xymon/docs/manpages/man5/tasks.cfg.5.html
===================================================================
--- xymon.orig/docs/manpages/man5/tasks.cfg.5.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man5/tasks.cfg.5.html	2012-07-23 23:41:15.000000000 +0200
@@ -118,7 +118,7 @@
 <P>
 The <B>GROUP</B> keyword can be used to limit the number of tasks 
 that may run simultaneously. E.g. if you are generating multiple
-pagesets of webpages, you dont want them to run at the same time.
+pagesets of webpages, you don't want them to run at the same time.
 Putting them into a GROUP will cause xymonlaunch to delay the start
 of new tasks, so that only one task will run per group. You can
 change the limit by defining the group before the tasks, with
Index: xymon/docs/manpages/man8/xymon-mailack.8.html
===================================================================
--- xymon.orig/docs/manpages/man8/xymon-mailack.8.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man8/xymon-mailack.8.html	2012-07-23 23:41:15.000000000 +0200
@@ -85,7 +85,7 @@
 Load environment from FILENAME, usually xymonserver.cfg.
 <P>
 <DT>--debug<DD>
-Dont send a message to xymond, but dump the message to
+Don't send a message to xymond, but dump the message to
 stdout.
 <P>
 </DL>
Index: xymon/docs/xymon-tips.html.DIST
===================================================================
--- xymon.orig/docs/xymon-tips.html.DIST	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/xymon-tips.html.DIST	2012-07-23 23:41:15.000000000 +0200
@@ -41,7 +41,7 @@
 </table>
 <hr>
 
-<h3><a name="noclient">My client-side tests dont show up on the webpages</a></h3>
+<h3><a name="noclient">My client-side tests don't show up on the webpages</a></h3>
 <p>Did you install a client ? The Xymon client package is installed
 automatically only on the Xymon server - on other systems, you must
 build the client package by running Xymon's configure-script with
@@ -228,7 +228,7 @@
 Big Brother at the <a href="http://www.deadcat.net/">www.deadcat.net archive</a>,
 and these will typically work without modifications if you run them in
 Xymon. Sometimes a few minor tweaks are needed - the Xymon mailing list
-can help you if you dont know how to go about that.</p>
+can help you if you don't know how to go about that.</p>
 <p>But if you have something unique you need to test, writing an extension
 script is pretty simple. You need to figure out some things:</p>
 <ul>
Index: xymon/lib/acklog.c
===================================================================
--- xymon.orig/lib/acklog.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/acklog.c	2012-07-23 23:41:15.000000000 +0200
@@ -53,7 +53,7 @@
 		acklog = fopen(acklogfilename, "r");
 	}
 	if (!acklog) {
-		/* If no acklog, that is OK - some people dont use acks */
+		/* If no acklog, that is OK - some people don't use acks */
 		dbgprintf("Cannot open acklog\n");
 		return;
 	}
Index: xymon/lib/availability.c
===================================================================
--- xymon.orig/lib/availability.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/availability.c	2012-07-23 23:41:15.000000000 +0200
@@ -401,7 +401,7 @@
 	/* Sanity check */
 	if (totime > getcurrenttime(NULL)) totime = getcurrenttime(NULL);
 
-	/* If for_history and fromtime is 0, dont do any seeking */
+	/* If for_history and fromtime is 0, don't do any seeking */
 	if (!for_history || (fromtime > 0)) {
 		fileerrors = scan_historyfile(fd, fromtime, totime, 
 				      l, sizeof(l), &starttime, &duration, colstr);
Index: xymon/lib/environ.c
===================================================================
--- xymon.orig/lib/environ.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/environ.c	2012-07-23 23:41:15.000000000 +0200
@@ -293,12 +293,12 @@
 {
 	static char *val;
 
-	val = getenv(envname);	/* Dont use xgetenv() here! */
+	val = getenv(envname);	/* Don't use xgetenv() here! */
 	if (!val) {
 		val = (char *)malloc(strlen(envname) + strlen(envdefault) + 2);
 		sprintf(val, "%s=%s", envname, envdefault);
 		putenv(val);
-		/* Dont free the string - it must be kept for the environment to work */
+		/* Don't free the string - it must be kept for the environment to work */
 		val = xgetenv(envname);	/* OK to use xgetenv here */
 	}
 
Index: xymon/lib/files.c
===================================================================
--- xymon.orig/lib/files.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/files.c	2012-07-23 23:41:15.000000000 +0200
@@ -52,7 +52,7 @@
 					}
 					else if (S_ISDIR(st.st_mode)) {
 						dbgprintf("Recurse into %s\n", fn);
-						dropdirectory(fn, 0); /* Dont background the recursive calls! */
+						dropdirectory(fn, 0); /* Don't background the recursive calls! */
 					}
 				}
 			}
Index: xymon/lib/headfoot.c
===================================================================
--- xymon.orig/lib/headfoot.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/headfoot.c	2012-07-23 23:41:15.000000000 +0200
@@ -614,7 +614,7 @@
 
 		/* Find token */
 		t_start = t_next;
-		/* Dont include lower-case letters - reserve those for eg "&nbsp;" */
+		/* Don't include lower-case letters - reserve those for eg "&nbsp;" */
 		t_next += strspn(t_next, "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_");
 		savechar = *t_next; *t_next = '\0';
 
Index: xymon/lib/loadalerts.c
===================================================================
--- xymon.orig/lib/loadalerts.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/loadalerts.c	2012-07-23 23:41:15.000000000 +0200
@@ -819,7 +819,7 @@
 
 	/* alert->groups is a comma-separated list of groups, so it needs some special handling */
 	/* 
-	 * NB: Dont check groups when RECOVERED - the group list for recovery messages is always empty.
+	 * NB: Don't check groups when RECOVERED - the group list for recovery messages is always empty.
 	 * It doesn't matter if we match a recipient who was not in the group that originally
 	 * got the alert - we will later check who has received the alert, and only those that
 	 * have will get the recovery message.
@@ -923,8 +923,8 @@
 
 	if (alert->state == A_NOTIFY) {
 		/*
-		 * Dont do the check until we are checking individual recipients (rulecrit is set).
-		 * You dont need to have NOTICE on the top-level rule, it's enough if a recipient
+		 * Don't do the check until we are checking individual recipients (rulecrit is set).
+		 * You don't need to have NOTICE on the top-level rule, it's enough if a recipient
 		 * has it set. However, we do want to allow there to be a default defined in the
 		 * rule; but it doesn't take effect until we start checking the recipients.
 		 */
@@ -991,8 +991,8 @@
 
 	if ((alert->state == A_RECOVERED) || (alert->state == A_DISABLED)) {
 		/*
-		 * Dont do the check until we are checking individual recipients (rulecrit is set).
-		 * You dont need to have RECOVERED on the top-level rule, it's enough if a recipient
+		 * Don't do the check until we are checking individual recipients (rulecrit is set).
+		 * You don't need to have RECOVERED on the top-level rule, it's enough if a recipient
 		 * has it set. However, we do want to allow there to be a default defined in the
 		 * rule; but it doesn't take effect until we start checking the recipients.
 		 */
Index: xymon/lib/loadalerts.h
===================================================================
--- xymon.orig/lib/loadalerts.h	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/loadalerts.h	2012-07-23 23:41:15.000000000 +0200
@@ -14,7 +14,7 @@
 #include <time.h>
 #include <stdio.h>
 
-/* The clients probably dont have the pcre headers */
+/* The clients probably don't have the pcre headers */
 #if defined(LOCALCLIENT) || !defined(CLIENTONLY)
 #include <pcre.h>
 
Index: xymon/lib/matching.h
===================================================================
--- xymon.orig/lib/matching.h	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/matching.h	2012-07-23 23:41:15.000000000 +0200
@@ -11,7 +11,7 @@
 #ifndef __MATCHING_H__
 #define __MATCHING_H__
 
-/* The clients probably dont have the pcre headers */
+/* The clients probably don't have the pcre headers */
 #if defined(LOCALCLIENT) || !defined(CLIENTONLY)
 #include <pcre.h>
 #include <stdarg.h>
Index: xymon/lib/misc.c
===================================================================
--- xymon.orig/lib/misc.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/misc.c	2012-07-23 23:41:15.000000000 +0200
@@ -467,7 +467,7 @@
 	inbuf = newstrbuffer(0);
 
 	while (p) {
-		/* Dont redo the eventlog or acklog things */
+		/* Don't redo the eventlog or acklog things */
 		if ((strcmp(p, "eventlog.sh") != 0) &&
 		    (strcmp(p, "acklog.sh") != 0)) {
 			sprintf(extfn, "%s/ext/%s/%s", xgetenv("XYMONHOME"), family, p);
Index: xymon/lib/netservices.c
===================================================================
--- xymon.orig/lib/netservices.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/netservices.c	2012-07-23 23:41:15.000000000 +0200
@@ -143,7 +143,7 @@
 			return xymonnetsvcs;
 		}
 
-		/* File has changed - reload configuration. But clean up first so we dont leak memory. */
+		/* File has changed - reload configuration. But clean up first so we don't leak memory. */
 		if (svcinfo != default_svcinfo) {
 			for (i=0; (svcinfo[i].svcname); i++) {
 				if (svcinfo[i].svcname) xfree(svcinfo[i].svcname);
@@ -285,7 +285,7 @@
 	/* Free the temp. svclist list */
 	while (head) {
 		/*
-		 * Note: Dont free the strings inside the records, 
+		 * Note: Don't free the strings inside the records, 
 		 * as they are now owned by the svcinfo records.
 		 */
 		walk = head;
Index: xymon/lib/notifylog.c
===================================================================
--- xymon.orig/lib/notifylog.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/notifylog.c	2012-07-23 23:41:15.000000000 +0200
@@ -205,7 +205,7 @@
 
 		hostname = hostsvc; svcname = strrchr(hostsvc, '.'); if (svcname) { *svcname = '\0'; svcname++; } else svcname = "";
 		eventhost = hostinfo(hostname);
-		if (!eventhost) continue; /* Dont report hosts that no longer exist */
+		if (!eventhost) continue; /* Don't report hosts that no longer exist */
 		eventcolumn = getname(svcname, 1);
 
 		p = strchr(recipient, '['); if (p) *p = '\0';
Index: xymon/lib/stackio.c
===================================================================
--- xymon.orig/lib/stackio.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/stackio.c	2012-07-23 23:41:15.000000000 +0200
@@ -350,7 +350,7 @@
 		newlistitem = (filelist_t *)malloc(sizeof(filelist_t));
 		newlistitem->filename = strdup(dirfn);
 		newlistitem->mtime = st.st_mtime;
-		newlistitem->fsize = 0; /* We dont check sizes of directories */
+		newlistitem->fsize = 0; /* We don't check sizes of directories */
 		newlistitem->next = *listhead;
 		*listhead = newlistitem;
 	}
Index: xymon/lib/timefunc.c
===================================================================
--- xymon.orig/lib/timefunc.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/timefunc.c	2012-07-23 23:41:15.000000000 +0200
@@ -409,7 +409,7 @@
 	char *endpos;
 	char savedelim;
 
-	/* Make sure we only process the first token, dont go past whitespace or some other delimiter */
+	/* Make sure we only process the first token, don't go past whitespace or some other delimiter */
 	endpos = dur + strspn(dur, "01234567890mhdw");
 	savedelim = *endpos;
 	*endpos = '\0';
Index: xymon/lib/url.c
===================================================================
--- xymon.orig/lib/url.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/url.c	2012-07-23 23:41:15.000000000 +0200
@@ -412,7 +412,7 @@
 	p = canonurl = (char *)malloc(canonurllen);
 	p += sprintf(p, "%s://", url->scheme);
 	/*
-	 * Dont include authentication here, since it 
+	 * Don't include authentication here, since it 
 	 * may show up in clear text on the info page.
 	 * And it is not used in URLs to access the site.
 	 * if (url->auth) p += sprintf(p, "%s@", url->auth);
Index: xymon/lib/xymonrrd.c
===================================================================
--- xymon.orig/lib/xymonrrd.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/lib/xymonrrd.c	2012-07-23 23:41:15.000000000 +0200
@@ -157,7 +157,7 @@
 	rrd_setup();
 
 	if (flags && (strchr(flags, 'R') != NULL)) {
-		/* Dont do RRD's for reverse tests, since they have no data */
+		/* Don't do RRD's for reverse tests, since they have no data */
 		return NULL;
 	}
 
Index: xymon/web/csvinfo.c
===================================================================
--- xymon.orig/web/csvinfo.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/csvinfo.c	2012-07-23 23:41:15.000000000 +0200
@@ -58,7 +58,7 @@
 		else if (strcasecmp(cwalk->name, "db") == 0) {
 			char *val, *p;
 
-			/* Dont allow any slashes in the db-name */
+			/* Don't allow any slashes in the db-name */
 			val = cwalk->value;
 			p = strrchr(val, '/');
 			if (p) val = (p+1);
Index: xymon/web/history.c
===================================================================
--- xymon.orig/web/history.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/history.c	2012-07-23 23:41:15.000000000 +0200
@@ -179,7 +179,7 @@
 		goto again;
 	}
 
-	/* Dont try to foresee the future */
+	/* Don't try to foresee the future */
 	now = getcurrenttime(NULL);
 	if (result > now) result = now;
 
@@ -694,7 +694,7 @@
 		/* Must modify 4-week charts to be 5-weeks, or the last day is 19% of the bar */
 		/*
 		 * Percent-based charts look awful with 24 hours / 7 days / 28 days / 12 months as basis
-		 * because these numbers dont divide into 100 neatly. So the last item becomes
+		 * because these numbers don't divide into 100 neatly. So the last item becomes
 		 * too large (worst with the 28-day char: 100/28 = 3, last becomes (100-27*3) = 19% wide).
 		 * So adjust the periods to something that matches percent-based calculations better.
 		 */
Index: xymon/web/report.c
===================================================================
--- xymon.orig/web/report.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/report.c	2012-07-23 23:41:15.000000000 +0200
@@ -303,7 +303,7 @@
 	else if (childpid > 0) {
 		wait(&childstat);
 
-		/* Ignore SIGHUP so we dont get killed during cleanup of XYMONREPDIR */
+		/* Ignore SIGHUP so we don't get killed during cleanup of XYMONREPDIR */
 		signal(SIGHUP, SIG_IGN);
 
 		if (WIFEXITED(childstat) && (WEXITSTATUS(childstat) != 0) ) {
Index: xymon/web/showgraph.c
===================================================================
--- xymon.orig/web/showgraph.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/showgraph.c	2012-07-23 23:41:15.000000000 +0200
@@ -811,7 +811,7 @@
 		*delim = '\0';
 		realservice = strdup(delim+1);
 
-		/* The requested gdef only acts as a fall-back solution so dont set gdef here. */
+		/* The requested gdef only acts as a fall-back solution so don't set gdef here. */
 		for (gdefuser = gdefs; (gdefuser && strcmp(service, gdefuser->name)); gdefuser = gdefuser->next) ;
 		strcpy(service, realservice);
 		wantsingle = 1;
@@ -974,7 +974,7 @@
 
 			/* 
 			 * Has it been updated recently (within the past 24 hours) ? 
-			 * We dont want old graphs to mess up multi-displays.
+			 * We don't want old graphs to mess up multi-displays.
 			 */
 			if (ignorestalerrds && (stat(d->d_name, &st) == 0) && ((now - st.st_mtime) > 86400)) {
 				continue;
Index: xymon/web/snapshot.c
===================================================================
--- xymon.orig/web/snapshot.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/snapshot.c	2012-07-23 23:41:15.000000000 +0200
@@ -232,7 +232,7 @@
 	else if (childpid > 0) {
 		wait(&childstat);
 
-		/* Ignore SIGHUP so we dont get killed during cleanup of XYMONSNAPDIR */
+		/* Ignore SIGHUP so we don't get killed during cleanup of XYMONSNAPDIR */
 		signal(SIGHUP, SIG_IGN);
 
 		if (WIFEXITED(childstat) && (WEXITSTATUS(childstat) != 0) ) {
Index: xymon/web/svcstatus.c
===================================================================
--- xymon.orig/web/svcstatus.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/web/svcstatus.c	2012-07-23 23:41:15.000000000 +0200
@@ -515,7 +515,7 @@
 		struct stat st;
 		FILE *fd;
 		/*
-		 * Some clients (Unix disk reports) dont have a newline before the
+		 * Some clients (Unix disk reports) don't have a newline before the
 		 * "Status unchanged in ..." text. Most do, but at least Solaris and
 		 * AIX do not. So just look for the text, not the newline.
 		 */
Index: xymon/xymond/alerts.cfg.5
===================================================================
--- xymon.orig/xymond/alerts.cfg.5	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/alerts.cfg.5	2012-07-23 23:41:15.000000000 +0200
@@ -124,7 +124,7 @@
 .BR "IGNORE"
 This is used to define a recipient that does NOT trigger any alerts, and also terminates the
 search for more recipients. It is useful if you have a rule that handles most alerts, but
-there is just that one particular server where you dont want cpu alerts on Monday morning.
+there is just that one particular server where you don't want cpu alerts on Monday morning.
 Note that the IGNORE recipient always has the STOP flag defined, so when the IGNORE recipient
 is matched, no more recipients will be considered. So the location of this recipient in your
 set of recipients is important.
Index: xymon/xymond/client/snmpcollect.c
===================================================================
--- xymon.orig/xymond/client/snmpcollect.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/client/snmpcollect.c	2012-07-23 23:41:15.000000000 +0200
@@ -41,7 +41,7 @@
 		if (strcmp(mibname, "proxy") == 0) {
 			/*
 			 * Data was forwarded through a proxy - skip this section.
-			 * We dont want a "proxy" status for all SNMP-enabled hosts.
+			 * We don't want a "proxy" status for all SNMP-enabled hosts.
 			 */
 			goto sectiondone;
 		}
Index: xymon/xymond/combostatus.1
===================================================================
--- xymon.orig/xymond/combostatus.1	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/combostatus.1	2012-07-23 23:41:15.000000000 +0200
@@ -41,7 +41,7 @@
 combostatus.
 
 .IP "--no-update"
-Dont send any status messages - instead, the result of the combotests
+Don't send any status messages - instead, the result of the combotests
 is simply dumped to stdout. Useful for debugging.
 
 
Index: xymon/xymond/do_alert.c
===================================================================
--- xymon.orig/xymond/do_alert.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/do_alert.c	2012-07-23 23:41:15.000000000 +0200
@@ -46,7 +46,7 @@
 static repeat_t *rpthead = NULL;
 
 int include_configid = 0;  /* Whether to include the configuration file linenumber in alerts */
-int testonly = 0;	   /* Test mode, dont actually send out alerts */
+int testonly = 0;	   /* Test mode, don't actually send out alerts */
 
 /* 
  * This generates a unique ID for an event.
@@ -689,7 +689,7 @@
 	while (!stoprulefound && ((recip = next_recipient(alert, &first, NULL, &r_next)) != NULL)) {
 		found = 1;
 		/* 
-		 * This runs in the parent xymond_alert proces, so we must create
+		 * This runs in the parent xymond_alert process, so we must create
 		 * a repeat-record here - or all alerts will get repeated every minute.
 		 */
 		rpt = find_repeatinfo(alert, recip, 1);
Index: xymon/xymond/rrd/do_ifstat.c
===================================================================
--- xymon.orig/xymond/rrd/do_ifstat.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/rrd/do_ifstat.c	2012-07-23 23:41:15.000000000 +0200
@@ -206,7 +206,7 @@
 				/*
 				 * Linux' netif aliases mess up things. 
 				 * Clear everything when we see an interface name.
-				 * But we dont want to track the "lo" interface.
+				 * But we don't want to track the "lo" interface.
 				 */
 				if (strcmp(ifname, "lo") == 0) {
 					xfree(ifname); ifname = NULL;
Index: xymon/xymond/trimhistory.c
===================================================================
--- xymon.orig/xymond/trimhistory.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/trimhistory.c	2012-07-23 23:41:15.000000000 +0200
@@ -493,7 +493,7 @@
 	/* Process statuslogs also ? */
 	if (!droplogs) return 0;
 
-	flhead = NULL;  /* Dirty - we should clean it up properly - but I dont care */
+	flhead = NULL;  /* Dirty - we should clean it up properly - but I don't care */
 	totalitems = 0;
 	if (chdir(xgetenv("XYMONHISTLOGS")) == -1) {
 		errprintf("Cannot cd to historical statuslogs directory: %s\n", strerror(errno));
Index: xymon/xymond/webfiles/zoom.js
===================================================================
--- xymon.orig/xymond/webfiles/zoom.js	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/webfiles/zoom.js	2012-07-23 23:41:15.000000000 +0200
@@ -595,7 +595,7 @@
  countStr = "";
 
  if ((gMouseObj.rightButtonPressed()) && (insideZoomBox())) {
-  // This causes a zoom-out event. We dont care about Y-axis zooming here.
+  // This causes a zoom-out event. We don't care about Y-axis zooming here.
   var Timespan = graphEnd - graphStart;
 
   gMouseObj.dragging = false;
Index: xymon/xymond/xymon-mailack.8
===================================================================
--- xymon.orig/xymond/xymon-mailack.8	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymon-mailack.8	2012-07-23 23:41:15.000000000 +0200
@@ -54,7 +54,7 @@
 Load environment from FILENAME, usually xymonserver.cfg.
 
 .IP "--debug"
-Dont send a message to xymond, but dump the message to
+Don't send a message to xymond, but dump the message to
 stdout.
 
 .SH "SEE ALSO"
Index: xymon/xymond/xymon-mailack.c
===================================================================
--- xymon.orig/xymond/xymon-mailack.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymon-mailack.c	2012-07-23 23:41:15.000000000 +0200
@@ -76,7 +76,7 @@
 				firsttxtline = strdup(STRBUF(inbuf));
 			}
 
-			continue;	/* We dont care about the rest of the message body */
+			continue;	/* We don't care about the rest of the message body */
 		}
 
 		/* See if we're at the end of the mail headers */
Index: xymon/xymond/xymond_alert.c
===================================================================
--- xymon.orig/xymond/xymond_alert.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_alert.c	2012-07-23 23:41:15.000000000 +0200
@@ -368,7 +368,7 @@
 	MEMDEFINE(acklogfn);
 	MEMDEFINE(notiflogfn);
 
-	/* Dont save the error buffer */
+	/* Don't save the error buffer */
 	save_errbuf = 0;
 
 	/* Load alert config */
@@ -656,7 +656,7 @@
 			else {
 				/* 
 				 * Send one "recovered" message out now, then go to A_DEAD.
-				 * Dont update the color here - we want recoveries to go out 
+				 * Don't update the color here - we want recoveries to go out 
 				 * only if the alert color triggered an alert
 				 */
 				awalk->state = (newcolor == COL_BLUE) ? A_DISABLED : A_RECOVERED;
Index: xymon/xymond/xymond_capture.c
===================================================================
--- xymon.orig/xymond/xymond_capture.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_capture.c	2012-07-23 23:41:15.000000000 +0200
@@ -62,7 +62,7 @@
 			 * You can have a timeout when waiting for new
 			 * messages. If it happens, you will get a "@@idle\n"
 			 * message with sequence number 0.
-			 * If you dont want a timeout, just pass a NULL for the timeout parameter.
+			 * If you don't want a timeout, just pass a NULL for the timeout parameter.
 			 */
 			timeout = (struct timespec *)(malloc(sizeof(struct timespec)));
 			timeout->tv_sec = (atoi(argv[argi]+10));
Index: xymon/xymond/xymond_channel.c
===================================================================
--- xymon.orig/xymond/xymond_channel.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_channel.c	2012-07-23 23:41:15.000000000 +0200
@@ -434,7 +434,7 @@
 	xtreePos_t handle;
 
 
-	/* Dont save the error buffer */
+	/* Don't save the error buffer */
 	save_errbuf = 0;
 
 	/* Create the peer container */
@@ -607,7 +607,7 @@
 			 * this message (GOCLIENT reaches 0).
 			 *
 			 * We wrap this into an alarm handler, because it can occasionally
-			 * fail, causing the whole system to lock up. We dont want that....
+			 * fail, causing the whole system to lock up. We don't want that....
 			 * We'll set the alarm to trigger after 1 second. Experience shows
 			 * that we'll either succeed in a few milliseconds, or fail completely
 			 * and wait the full alarm-timer duration.
Index: xymon/xymond/xymond_client.c
===================================================================
--- xymon.orig/xymond/xymond_client.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_client.c	2012-07-23 23:41:15.000000000 +0200
@@ -1396,7 +1396,7 @@
 			}
 
 			if (!anyrules) {
-				/* Dont clutter the display with logfiles unless they have rules */
+				/* Don't clutter the display with logfiles unless they have rules */
 				continue;
 			}
 		}
Index: xymon/xymond/xymond_filestore.c
===================================================================
--- xymon.orig/xymond/xymond_filestore.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_filestore.c	2012-07-23 23:41:15.000000000 +0200
@@ -192,7 +192,7 @@
 	int seq;
 	int running = 1;
 
-	/* Dont save the error buffer */
+	/* Don't save the error buffer */
 	save_errbuf = 0;
 
 	for (argi = 1; (argi < argc); argi++) {
Index: xymon/xymond/xymond_history.c
===================================================================
--- xymon.orig/xymond/xymond_history.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_history.c	2012-07-23 23:41:15.000000000 +0200
@@ -83,7 +83,7 @@
 	MEMDEFINE(newcol2);
 	MEMDEFINE(oldcol2);
 
-	/* Dont save the error buffer */
+	/* Don't save the error buffer */
 	save_errbuf = 0;
 
 	sprintf(pidfn, "%s/xymond_history.pid", xgetenv("XYMONSERVERLOGS"));
@@ -507,7 +507,7 @@
 			strncpy(newcol2, colorname(newcolor), 2);
 			newcol2[2] = oldcol2[2] = '\0';
 
-			if (oldcolor == -1)           trend = -1;	/* we dont know how bad it was */
+			if (oldcolor == -1)           trend = -1;	/* we don't know how bad it was */
 			else if (newcolor > oldcolor) trend = 2;	/* It's getting worse */
 			else if (newcolor < oldcolor) trend = 1;	/* It's getting better */
 			else                          trend = 0;	/* Shouldn't happen ... */
Index: xymon/xymond/xymond_locator.c
===================================================================
--- xymon.orig/xymond/xymond_locator.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_locator.c	2012-07-23 23:41:15.000000000 +0200
@@ -58,7 +58,7 @@
  * - a tree with information about what servers provide this service; and
  * - a tree with information about the hosts that have been registered to
  *   run on this particular server.
- * Some types of services dont have any host-specific data (e.g. "client"),
+ * Some types of services don't have any host-specific data (e.g. "client"),
  * then the host-specific tree will just be empty.
  */
 typedef struct serverinfo_t {
@@ -164,7 +164,7 @@
 	  case 'U':
 		dbgprintf("Upping server '%s' type %s to weight %d\n", servername, servicetype_names[servicetype], itm->serverconfweight);
 		itm->serveractualweight = itm->serverconfweight;
-		/* Dont mess with serverweightleft - this may just be an "i'm alive" message */
+		/* Don't mess with serverweightleft - this may just be an "i'm alive" message */
 		if (itm->serverconfweight < 0) recalc_current(servicetype);
 		break;
 	}
@@ -189,7 +189,7 @@
 		itm = xtreeData(hitree[servicetype], handle);
 	}
 
-	/* If we dont know this server, then we must register it. If we do, just update the host record */
+	/* If we don't know this server, then we must register it. If we do, just update the host record */
 	handle = xtreeFind(sitree[servicetype], servername);
 	if (handle == xtreeEnd(sitree[servicetype])) {
 		dbgprintf("Registering default server '%s'\n", servername);
@@ -649,7 +649,7 @@
 	struct sigaction sa;
 	int argi, opt;
 
-	/* Dont save the output from errprintf() */
+	/* Don't save the output from errprintf() */
 	save_errbuf = 0;
 
 	memset(&laddr, 0, sizeof(laddr));
Index: xymon/xymond/xymond_rootlogin.pl
===================================================================
--- xymon.orig/xymond/xymond_rootlogin.pl	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_rootlogin.pl	2012-07-23 23:41:15.000000000 +0200
@@ -88,7 +88,7 @@
 	my $statusmsg;
 	my $cmd;
 
-	# Dont do anything unless we have the "who" section
+	# Don't do anything unless we have the "who" section
 	return unless ( $sections{"who"} );
 
 	# Is there a "root" login somewhere in the "who" section?
Index: xymon/xymongen/loaddata.c
===================================================================
--- xymon.orig/xymongen/loaddata.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymongen/loaddata.c	2012-07-23 23:41:15.000000000 +0200
@@ -146,7 +146,7 @@
 	}
 
 	if (reportstart || snapshot) {
-		/* Dont do reports for info- and trends-columns */
+		/* Don't do reports for info- and trends-columns */
 		p = strrchr(filename, '.');
 		if (p == NULL) return NULL;
 		p++;
Index: xymon/xymongen/pagegen.c
===================================================================
--- xymon.orig/xymongen/pagegen.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymongen/pagegen.c	2012-07-23 23:41:15.000000000 +0200
@@ -36,7 +36,7 @@
 char *includecolumns = NULL;
 char *nongreenignorecolumns = "";
 int  nongreennodialups = 0;
-int  sort_grouponly_items = 0; /* Standard Xymon behaviour: Dont sort group-only items */
+int  sort_grouponly_items = 0; /* Standard Xymon behaviour: Don't sort group-only items */
 char *rssextension = ".rss"; /* Filename extension for generated RSS files */
 char *defaultpagetitle = NULL;
 int  pagetitlelinks = 0;
@@ -211,7 +211,7 @@
 		/* Skip the dummy record */
 		collist_walk = head; head = head->next; xfree(collist_walk);
 
-		/* We're done - dont even look at the actual test data. */
+		/* We're done - don't even look at the actual test data. */
 		return (head);
 	}
 
@@ -570,9 +570,9 @@
 					}
 					else if (genstatic && strcmp(e->column->name, xgetenv("INFOCOLUMN")) && strcmp(e->column->name, xgetenv("TRENDSCOLUMN"))) {
 						/*
-						 * Dont use htmlextension here - it's for the
+						 * Don't use htmlextension here - it's for the
 						 * pages generated dynamically.
-						 * We dont do static pages for the info- and trends-columns, because
+						 * We don't do static pages for the info- and trends-columns, because
 						 * they are always generated dynamically.
 						 */
 						fprintf(output, "<A HREF=\"%s/html/%s.%s.html\">",
@@ -1067,7 +1067,7 @@
 	p = strtok(extensions, "\t ");
 
 	while (p) {
-		/* Dont redo the eventlog or acklog things */
+		/* Don't redo the eventlog or acklog things */
 		if (strcmp(p, "eventlog.sh") == 0) {
 			if (nongreeneventlog && !havedoneeventlog) {
 				do_eventlog(output, nongreeneventlogmaxcount, nongreeneventlogmaxtime,
@@ -1121,14 +1121,14 @@
 		int	useit = 0;
 
 		/*
-		 * Why dont we use the interesting_column() routine here ? 
+		 * Why don't we use the interesting_column() routine here ? 
 		 *
 		 * Well, because what we are interested in for now is
 		 * to determine if this HOST should be included on the page.
 		 *
-		 * We dont care if individual COLUMNS are included if the 
+		 * We don't care if individual COLUMNS are included if the 
 		 * host shows up - some columns are always included, e.g.
-		 * the info- and trends-columns, but we dont want that to
+		 * the info- and trends-columns, but we don't want that to
 		 * trigger a host being on the nongreen page!
 		 */
 		switch (summarytype) {
@@ -1253,7 +1253,7 @@
 	if ((snapshot == 0) && (summarytype == PAGE_NONGREEN)) {
 		do_nongreenext(output, "XYMONNONGREENEXT", "mkbb");
 
-		/* Dont redo the eventlog or acklog things */
+		/* Don't redo the eventlog or acklog things */
 		if (nongreeneventlog && !havedoneeventlog) {
 			do_eventlog(output, nongreeneventlogmaxcount, nongreeneventlogmaxtime, 
 				    NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, nongreennodialups, 
Index: xymon/xymongen/rssgen.c
===================================================================
--- xymon.orig/xymongen/rssgen.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymongen/rssgen.c	2012-07-23 23:41:15.000000000 +0200
@@ -134,7 +134,7 @@
 	fprintf(fd, "    <link>");
 	if (generate_static()) {
 		/*
-		 * Dont use htmlextension here - the .html files are generated by bbd.
+		 * Don't use htmlextension here - the .html files are generated by bbd.
 		 */
 		fprintf(fd, "%s/html/%s.%s.html",
 			xgetenv("XYMONWEBHOSTURL"), 
@@ -257,7 +257,7 @@
 					fprintf(fd, "      <LI>\n");
 					if (generate_static()) {
 						/*
-						 * Dont use htmlextension here - the .html files are
+						 * Don't use htmlextension here - the .html files are
 						 * generated by bbd.
 						 */
 						fprintf(fd, "\t<A TARGET=\"_content\" HREF=\"%s/html/%s.%s.html\">",
Index: xymon/xymongen/xymongen.1
===================================================================
--- xymon.orig/xymongen/xymongen.1	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymongen/xymongen.1	2012-07-23 23:41:15.000000000 +0200
@@ -455,7 +455,7 @@
 .br
 The syntax is identical to the normal "page" and "subpage"
 directives in hosts.cfg, but the directive is prefixed with
-the pageset name. Dont put any hosts in-between the page
+the pageset name. Don't put any hosts in-between the page
 and subpage directives - just add all the directives at
 the top of the hosts.cfg file.
 .br
Index: xymon/xymongen/xymongen.c
===================================================================
--- xymon.orig/xymongen/xymongen.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymongen/xymongen.c	2012-07-23 23:41:15.000000000 +0200
@@ -564,7 +564,7 @@
 	if (xgetenv("XYMONSUBPAGEHTACCESS")) xymonsubpagehtaccess = strdup(xgetenv("XYMONSUBPAGEHTACCESS"));
 
 	/*
-	 * When doing embedded- or snapshot-pages, dont build the WML/RSS pages.
+	 * When doing embedded- or snapshot-pages, don't build the WML/RSS pages.
 	 */
 	if (embedded || snapshot) enable_wmlgen = wantrss = 0;
 	if (embedded) {
Index: xymon/xymonnet/contest.c
===================================================================
--- xymon.orig/xymonnet/contest.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/contest.c	2012-07-23 23:41:15.000000000 +0200
@@ -293,10 +293,10 @@
 		}
 	        *outp = 255; outp++;
 		inp++; remain--;
-		if ((*inp == 251) || (*inp == 252))     /* WILL or WONT */
-			y = 254;                          /* -> DONT */
-		if ((*inp == 253) || (*inp == 254))     /* DO or DONT */
-			y = 252;                          /* -> WONT */
+		if ((*inp == 251) || (*inp == 252))     /* WILL or WON'T */
+			y = 254;                          /* -> DON'T */
+		if ((*inp == 253) || (*inp == 254))     /* DO or DON'T */
+			y = 252;                          /* -> WON'T */
 		if (y) {
 			*outp = y; outp++;
 			inp++; remain--;
@@ -388,7 +388,7 @@
 	strncpy(buf, passphrase, size);
 	buf[size - 1] = '\0';
 
-	/* Clear this buffer for security! Dont want passphrases in core dumps... */
+	/* Clear this buffer for security! Don't want passphrases in core dumps... */
 	memset(passphrase, 0, sizeof(passphrase));
 
 	return strlen(buf);
@@ -1255,7 +1255,7 @@
 							item->telnetbuflen = res;
 
 							/*
-							 * Safety measure: Dont loop forever doing
+							 * Safety measure: Don't loop forever doing
 							 * telnet options.
 							 * This puts a maximum on how many times
 							 * we go here.
Index: xymon/xymonnet/dns.h
===================================================================
--- xymon.orig/xymonnet/dns.h	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/dns.h	2012-07-23 23:41:15.000000000 +0200
@@ -16,7 +16,7 @@
 /* dnslookup values */
 #define DNS_THEN_IP     0	/* Try DNS - if it fails, use IP from hosts.cfg */
 #define DNS_ONLY        1	/* DNS only - if it fails, report service down */
-#define IP_ONLY         2	/* IP only - dont do DNS lookups */
+#define IP_ONLY         2	/* IP only - don't do DNS lookups */
 
 extern int use_ares_lookup;
 extern int max_dns_per_run;
Index: xymon/xymonnet/dns2.c
===================================================================
--- xymon.orig/xymonnet/dns2.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/dns2.c	2012-07-23 23:41:15.000000000 +0200
@@ -51,7 +51,7 @@
 
 #include "dns2.h"
 
-/* Some systems (AIX, HP-UX) dont know the DNS T_SRV record */
+/* Some systems (AIX, HP-UX) don't know the DNS T_SRV record */
 #ifndef T_SRV
 #define T_SRV 33
 #endif
Index: xymon/xymonnet/httpresult.c
===================================================================
--- xymon.orig/xymonnet/httpresult.c	2012-07-23 23:40:33.000000000 +0200
+++ xymon/xymonnet/httpresult.c	2012-07-23 23:41:15.000000000 +0200
@@ -566,7 +566,7 @@
 			addtostatus("\nNo output received from server\n\n");
 		}
 		else if (!host->hidehttp) {
-			/* Dont flood xymond with data */
+			/* Don't flood xymond with data */
 			if (req->outlen > MAX_CONTENT_DATA) {
 				*(req->output + MAX_CONTENT_DATA) = '\0';
 				req->outlen = MAX_CONTENT_DATA;
Index: xymon/xymonnet/httptest.c
===================================================================
--- xymon.orig/xymonnet/httptest.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/httptest.c	2012-07-23 23:41:15.000000000 +0200
@@ -355,7 +355,7 @@
 	httptest->contlen = -1;
 	httptest->parsestatus = (httptest->weburl.proxyurl ? httptest->weburl.proxyurl->parseerror : httptest->weburl.desturl->parseerror);
 
-	/* If there was a parse error in the URL, dont run the test */
+	/* If there was a parse error in the URL, don't run the test */
 	if (httptest->parsestatus) return;
 
 
Index: xymon/xymonnet/ldaptest.c
===================================================================
--- xymon.orig/xymonnet/ldaptest.c	2012-07-23 23:40:33.000000000 +0200
+++ xymon/xymonnet/ldaptest.c	2012-07-23 23:41:15.000000000 +0200
@@ -106,7 +106,7 @@
 	 * At this point, the plain TCP checks have already run.
 	 * So we know from the test found in t->privdata whether
 	 * the LDAP port is open.
-	 * If it is not open, then dont run this check.
+	 * If it is not open, then don't run this check.
 	 */
 	if (basecheck->open == 0) {
 		/* Cannot connect to LDAP port. */
@@ -536,7 +536,7 @@
 		argi++;
 	}
 
-	/* For testing, dont crash in sendmsg when no XYMSRV defined */
+	/* For testing, don't crash in sendmsg when no XYMSRV defined */
 	dontsendmessages = 1;
 	if (xgetenv("XYMSRV") == NULL) putenv("XYMSRV=127.0.0.1");
 
Index: xymon/xymonnet/xymon-snmpcollect.c
===================================================================
--- xymon.orig/xymonnet/xymon-snmpcollect.c	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/xymon-snmpcollect.c	2012-07-23 23:41:15.000000000 +0200
@@ -302,7 +302,7 @@
 			/*
 			 * While fetching keys, walk the current key-table until we reach the end of the table.
 			 * When we reach the end of one key-table, start with the next.
-			 * FIXME: Could optimize so we dont fetch the whole table, but only those rows we need.
+			 * FIXME: Could optimize so we don't fetch the whole table, but only those rows we need.
 			 */
 			if (pdu->errstat == SNMP_ERR_NOERROR) {
 				struct variable_list *vp = pdu->variables;
@@ -358,7 +358,7 @@
 		}
 	}
 	else {
-		dbgprintf("operation not succesful: %d\n", operation);
+		dbgprintf("operation not successful: %d\n", operation);
 		print_result(STAT_TIMEOUT, req, pdu);
 	}
 
@@ -865,7 +865,7 @@
 
 		for (kwalk = rwalk->keyrecords; (kwalk); kwalk = kwalk->next) {
 			if (!kwalk->indexoid) {
-				/* Dont report failed lookups for the pseudo match-all key record */
+				/* Don't report failed lookups for the pseudo match-all key record */
 				if (*kwalk->key != '*') {
 					/* We failed to determine the index */
 					errprintf("Could not determine index for host=%s mib=%s key=%s\n",
@@ -1081,7 +1081,7 @@
 
 	netsnmp_register_loghandler(NETSNMP_LOGHANDLER_STDERR, 7);
 	init_snmp("xymon-snmpcollect");
-	snmp_mib_toggle_options("e");	/* Like -Pe: Dont show MIB parsing errors */
+	snmp_mib_toggle_options("e");	/* Like -Pe: Don't show MIB parsing errors */
 	snmp_out_toggle_options("qn");	/* Like -Oqn: OID's printed as numbers, values printed without type */
 
 	readmibs(NULL, mibcheck);
Index: xymon/xymonnet/xymonnet.c
===================================================================
--- xymon.orig/xymonnet/xymonnet.c	2012-07-23 23:40:33.000000000 +0200
+++ xymon/xymonnet/xymonnet.c	2012-07-23 23:41:15.000000000 +0200
@@ -538,7 +538,7 @@
 							if (ips) { *ips = '\0'; ips++; }
 						} while (ips && (*ips));
 					}
-					s = NULL; /* Dont add the test now - ping is special (enabled by default) */
+					s = NULL; /* Don't add the test now - ping is special (enabled by default) */
 				}
 				else if ((argnmatch(testspec, "ldap://")) || (argnmatch(testspec, "ldaps://"))) {
 					/*
@@ -828,7 +828,7 @@
 
 			/* 
 			 * Check for a duplicate host def. Causes all sorts of funny problems.
-			 * However, dont drop the second definition - to do this, we will have
+			 * However, don't drop the second definition - to do this, we will have
 			 * to clean up the testitem lists as well, or we get crashes when 
 			 * tests belong to a non-existing host.
 			 */
@@ -2203,7 +2203,7 @@
 			printf("    --timelimit=N               : Warns if the complete test run takes longer than N seconds [TASKSLEEP]\n");
 			printf("\nOptions for simple TCP service tests:\n");
 			printf("    --checkresponse             : Check response from known services\n");
-			printf("    --no-flags                  : Dont send extra xymonnet test flags\n");
+			printf("    --no-flags                  : Don't send extra xymonnet test flags\n");
 			printf("\nOptions for PING (connectivity) tests:\n");
 			printf("    --ping[=COLUMNNAME]         : Enable ping checking, default columname is \"conn\"\n");
 			printf("    --noping                    : Disable ping checking\n");
@@ -2534,7 +2534,7 @@
 		sprintf(msgline, "\nStatistics:\n Hosts total           : %8d\n Hosts with no tests   : %8d\n Total test count      : %8d\n Status messages       : %8d\n Alert status msgs     : %8d\n Transmissions         : %8d\n", 
 			hostcount, notesthostcount, testcount, xymonstatuscount, xymonnocombocount, xymonmsgcount);
 		addtostatus(msgline);
-		sprintf(msgline, "\nDNS statistics:\n # hostnames resolved  : %8d\n # succesful           : %8d\n # failed              : %8d\n # calls to dnsresolve : %8d\n",
+		sprintf(msgline, "\nDNS statistics:\n # hostnames resolved  : %8d\n # successful          : %8d\n # failed              : %8d\n # calls to dnsresolve : %8d\n",
 			dns_stats_total, dns_stats_success, dns_stats_failed, dns_stats_lookups);
 		addtostatus(msgline);
 		sprintf(msgline, "\nTCP test statistics:\n # TCP tests total     : %8d\n # HTTP tests          : %8d\n # Simple TCP tests    : %8d\n # Connection attempts : %8d\n # bytes written       : %8ld\n # bytes read          : %8ld\n",
Index: xymon/xymonnet/xymonnet.h
===================================================================
--- xymon.orig/xymonnet/xymonnet.h	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymonnet/xymonnet.h	2012-07-23 23:41:15.000000000 +0200
@@ -86,7 +86,7 @@
 	char *hostname;
 	char ip[IP_ADDR_STRLEN];
 	int dialup;		/* dialup flag (if set, failed tests report as clear) */
-	int testip;		/* testip flag (dont do dns lookups on hostname) */
+	int testip;		/* testip flag (don't do dns lookups on hostname) */
 	int nosslcert;		/* nosslcert flag */
 	int hidehttp;		/* hidehttp flag */
 	int dodns;              /* set while loading tests if we need to do a DNS lookup */
@@ -95,13 +95,13 @@
 	char *hosttype;         /* For the "Intermediate HOSTTYPE is down" message */
 
 	/* The following are for the connectivity test */
-	int noconn;		/* noconn flag (dont report "conn" at all */
+	int noconn;		/* noconn flag (don't report "conn" at all */
 	int noping;		/* noping flag (report "conn" as clear=disabled */
 	int badconn[3];		/* badconn:x:y:z flag */
 	int downcount;		/* number of successive failed conn tests */
 	time_t downstart;	/* time() of first conn failure */
 	char *routerdeps;       /* Hosts from the "router:" tag */
-	struct testedhost_t *deprouterdown;    /* Set if dependant router is down */
+	struct testedhost_t *deprouterdown;    /* Set if dependent router is down */
 	int dotrace;		/* Run traceroute for this host */
 	strbuffer_t *traceroute;/* traceroute results */
 	struct extraping_t *extrapings;
Index: xymon/xymonnet/xymonping.c
===================================================================
--- xymon.orig/xymonnet/xymonping.c	2012-07-23 23:40:33.000000000 +0200
+++ xymon/xymonnet/xymonping.c	2012-07-23 23:41:15.000000000 +0200
@@ -182,7 +182,7 @@
 	if (idx >= hostcount) return hostcount;
 
 	/* 
-	 * Dont flood the net.
+	 * Don't flood the net.
 	 * By enforcing a brief sleep here, we force a delay
 	 * between sending packets. It is easiest to do before sending
 	 * a packet, because if done after the send completes, then
@@ -471,7 +471,7 @@
 		time_t cutoff = getcurrenttime(NULL) + timeout + 1;
 		sendidx = 0;
 
-		/* Change this on each iteration, so we dont mix packets from each round of pings */
+		/* Change this on each iteration, so we don't mix packets from each round of pings */
 		myicmpid = ((getpid()+tries) & 0x7FFF);
 
 		/* Do one loop over the hosts we havent had responses from yet. */
Index: xymon/docs/bb-to-xymon.html
===================================================================
--- xymon.orig/docs/bb-to-xymon.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/bb-to-xymon.html	2012-07-23 23:41:15.000000000 +0200
@@ -8,7 +8,7 @@
 
 <h1>Upgrading from Big Brother to Xymon</h1>
 <p>First, you should realize that this is not a fully automated
-proces. You will need to do some work yourself - especially with
+process. You will need to do some work yourself - especially with
 the handling of alerts.</p>
 
 <h3>First step: Install Xymon</h3>
Index: xymon/docs/manpages/man8/xymond_channel.8.html
===================================================================
--- xymon.orig/docs/manpages/man8/xymond_channel.8.html	2012-07-23 23:39:36.000000000 +0200
+++ xymon/docs/manpages/man8/xymond_channel.8.html	2012-07-23 23:41:15.000000000 +0200
@@ -92,7 +92,7 @@
 option causes it to run as a stand-alone background task.
 <P>
 <DT>--pidfile=FILENAME<DD>
-If running as a stand-alone daemon, xymond_channel will save the proces-ID 
+If running as a stand-alone daemon, xymond_channel will save the process-ID 
 of the daemon in FILENAME. This is useful for automated startup- and shutdown-
 scripts.
 <P>
Index: xymon/xymond/etcfiles/snmpmibs.cfg
===================================================================
--- xymon.orig/xymond/etcfiles/snmpmibs.cfg	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/etcfiles/snmpmibs.cfg	2012-07-23 23:41:15.000000000 +0200
@@ -39,7 +39,7 @@
 	Used = HOST-RESOURCES-MIB::hrStorageUsed			/rrd:GAUGE
 
 [hrtask]
-# hrtask is the closest you can get to a proces-listing
+# hrtask is the closest you can get to a process-listing
 	keyidx (HOST-RESOURCES-MIB::hrSWRunName)
 	keyidx [HOST-RESOURCES-MIB::hrSWRunPath]
 	keyidx <HOST-RESOURCES-MIB::hrSWRunIndex>
Index: xymon/xymond/xymond_channel.8
===================================================================
--- xymon.orig/xymond/xymond_channel.8	2012-07-23 23:39:36.000000000 +0200
+++ xymon/xymond/xymond_channel.8	2012-07-23 23:41:15.000000000 +0200
@@ -61,7 +61,7 @@
 option causes it to run as a stand-alone background task.
 
 .IP "--pidfile=FILENAME"
-If running as a stand-alone daemon, xymond_channel will save the proces-ID 
+If running as a stand-alone daemon, xymond_channel will save the process-ID 
 of the daemon in FILENAME. This is useful for automated startup- and shutdown-
 scripts.
 
